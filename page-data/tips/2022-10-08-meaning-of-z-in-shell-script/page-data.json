{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/tips/2022-10-08-meaning-of-z-in-shell-script","result":{"data":{"markdownRemark":{"id":"b267556d-255e-582a-8ed0-07d15b63f654","html":"<h1 id=\"문자열-비교\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%B9%84%EA%B5%90\" aria-label=\"문자열 비교 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자열 비교</h1>\n<p>이전 회사에서 근무 중, Bash 스크립트를 작성할 일이 있었습니다. 그 때 Bash 스크립트에서 문자열을 다루는 오퍼레이터에 대해 살펴보았던 기억이 있어 이를 글로 남기고 공유하고자 합니다.</p>\n<h2 id=\"들어가기에-앞서\" style=\"position:relative;\"><a href=\"#%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0%EC%97%90-%EC%95%9E%EC%84%9C\" aria-label=\"들어가기에 앞서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>들어가기에 앞서..</h2>\n<h3 id=\"bash-스크립트에서의-if-then-구문\" style=\"position:relative;\"><a href=\"#bash-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C%EC%9D%98-if-then-%EA%B5%AC%EB%AC%B8\" aria-label=\"bash 스크립트에서의 if then 구문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bash 스크립트에서의 <code class=\"language-text\">if-then</code> 구문</h3>\n<p>논리적 참/거짓을 다루어 분기하기 위한 구문입니다. 으레 있는 구분이지요. 어셈블리어부터 현대 언어까지 다 있습니다.</p>\n<p>그런데 if 구문에서 참/거짓을 다루는 것은 바이너리입니다. <code class=\"language-text\">/usr/bin/test</code> 라는 바이너리를 사용하죠. 이러한 이유로 Test constructs 라고 부르는 것으로 보입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\r\n\r\n<span class=\"token comment\"># 1st cmd) test를 직접 사용하는 경우</span>\r\n<span class=\"token keyword\">if</span> <span class=\"token builtin class-name\">test</span> <span class=\"token parameter variable\">-z</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span>\r\n<span class=\"token keyword\">then</span>\r\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"no args\"</span>\r\n<span class=\"token keyword\">else</span>\r\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"1st args: <span class=\"token variable\">$1</span>\"</span>\r\n<span class=\"token keyword\">fi</span>\r\n\r\n<span class=\"token comment\"># 2nd cmd) test의 fullpath를 직접 사용하는 경우</span>\r\n<span class=\"token keyword\">if</span> /usr/bin/test <span class=\"token parameter variable\">-z</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span>\r\n<span class=\"token keyword\">then</span>\r\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"no args\"</span>\r\n<span class=\"token keyword\">else</span>\r\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"1st args: <span class=\"token variable\">$1</span>\"</span>\r\n<span class=\"token keyword\">fi</span>\r\n\r\n<span class=\"token comment\"># 3rd cmd) bracket 내에 조건문을 담는 경우</span>\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-z</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span> <span class=\"token punctuation\">]</span>\r\n<span class=\"token keyword\">then</span>\r\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"no args\"</span>\r\n<span class=\"token keyword\">else</span>\r\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"1st args: <span class=\"token variable\">$1</span>\"</span>\r\n<span class=\"token keyword\">fi</span>\r\n\r\n<span class=\"token comment\"># 4th cmd) /usr/bin/[if 구문을 사용]</span>\r\n<span class=\"token comment\"># 3rd와 동일</span>\r\n\r\n<span class=\"token keyword\">if</span> /usr/bin/<span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-z</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span> <span class=\"token punctuation\">]</span>\r\n<span class=\"token keyword\">then</span>\r\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"no args\"</span>\r\n<span class=\"token keyword\">else</span>\r\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"1st args: <span class=\"token variable\">$1</span>\"</span>\r\n<span class=\"token keyword\">fi</span></code></pre></div>\n<h2 id=\"문자열의-동일여부-체크\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%98-%EB%8F%99%EC%9D%BC%EC%97%AC%EB%B6%80-%EC%B2%B4%ED%81%AC\" aria-label=\"문자열의 동일여부 체크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자열의 동일여부 체크</h2>\n<ul>\n<li><code class=\"language-text\">=</code>\n<ul>\n<li>값이 같은가?</li>\n<li><code class=\"language-text\">if [ \"$a\" = \"$b\" ]</code> 과 같이 사용합니다. 띄어쓰기가 반드시 필요합니다!!!</li>\n</ul>\n</li>\n<li><code class=\"language-text\">==</code>\n<ul>\n<li>값이 같은가?</li>\n<li><code class=\"language-text\">if [ \"$a\" == \"$b\" ]</code> 과 같이 사용합니다. <code class=\"language-text\">==</code> 비교는 double-brackets에서는 전혀 다르게 동작할 수 있음에 유의하십시오.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">!=</code>\n<ul>\n<li>값이 같지 않은가?</li>\n<li><code class=\"language-text\">if [ \"$a\" != \"$b\" ]</code> 과 같이 사용합니다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"문자열의-사전-순서-체크\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%98-%EC%82%AC%EC%A0%84-%EC%88%9C%EC%84%9C-%EC%B2%B4%ED%81%AC\" aria-label=\"문자열의 사전 순서 체크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자열의 사전 순서 체크</h2>\n<ul>\n<li><code class=\"language-text\">&lt;</code>\n<ul>\n<li>값이 작은가 (ASCII 알파벳 순)</li>\n<li><code class=\"language-text\">if [[ \"$a\" &lt; \"$b\" ]]</code> 혹은 <code class=\"language-text\">if [ \"$a\" \\&lt; \"$b\" ]</code> 과 같이 사용합니다.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">></code>\n<ul>\n<li>값이 큰가? (ASCII 알파벳 순)</li>\n<li><code class=\"language-text\">if [[ \"$a\" > \"$b\" ]]</code> 혹은 <code class=\"language-text\">if [[ \"$a\" \\> \"$b\" ]]</code> 과 같이 사용합니다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"문자열의-null-여부-체크\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%98-null-%EC%97%AC%EB%B6%80-%EC%B2%B4%ED%81%AC\" aria-label=\"문자열의 null 여부 체크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자열의 null 여부 체크</h2>\n<ul>\n<li><code class=\"language-text\">-z</code>\n<ul>\n<li>문자열이 <code class=\"language-text\">null</code>인지를 묻는 구문입니다. 다시말해, 문자열의 길이가 <code class=\"language-text\">0</code>인지 묻는 것과 동일합니다.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">-n</code>\n<ul>\n<li>문자열이 null이 아니고, 길이가 <code class=\"language-text\">0</code>이 아닌지를 <strong>함께</strong> 묻습니다.</li>\n<li><code class=\"language-text\">if [ -n \"${1}\" ]</code> 과 같이 사용합니다.</li>\n<li>이 때, 예기치 않은 동작을 방지하려면 문자열을 항상 <code class=\"language-text\">\"</code>로 감싸서 사용합니다.</li>\n</ul>\n</li>\n</ul>\n<p>예를들어, 아래의 코드가 있다고 칩시다:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\r\n\r\n<span class=\"token comment\"># 이 값을 직접 바꾸며 테스트하면 됩니다!</span>\r\n<span class=\"token assign-left variable\">abc</span><span class=\"token operator\">=</span><span class=\"token string\">'abc'</span>\r\n\r\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"step 1\"</span>\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-z</span> <span class=\"token string\">\"<span class=\"token variable\">$abc</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token keyword\">then</span>\r\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"[1] empty string\"</span>\r\n<span class=\"token keyword\">else</span>\r\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"[1] string is not null: <span class=\"token variable\">$abc</span>\"</span>\r\n<span class=\"token keyword\">fi</span>\r\n\r\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"step 2\"</span>\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">\"<span class=\"token variable\">$abc</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token keyword\">then</span>\r\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"[2] string is not null: <span class=\"token variable\">$abc</span>\"</span>\r\n<span class=\"token keyword\">else</span>\r\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"[2] empty string\"</span>\r\n<span class=\"token keyword\">fi</span></code></pre></div>\n<h2 id=\"오잉\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EC%9E%89\" aria-label=\"오잉 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오잉?</h2>\n<h3 id=\"single-brackets-and-double-brackets\" style=\"position:relative;\"><a href=\"#single-brackets-and-double-brackets\" aria-label=\"single brackets and double brackets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>single-brackets and double-brackets</h3>\n<blockquote>\n<p><a href=\"https://tldp.org/LDP/abs/html/testconstructs.html#DBLBRACKETS\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">참고경로</a>를 읽어주세요!</p>\n</blockquote>\n<p>Bash 2.02 버전(1998년에 릴리즈 되었습니다!) 부터 if 구문에서 double bracket 사용할 수 있게 되었습니다. 논리구문 처리에 있어서 보다 작성된 의도대로 돌게끔 해석합니다. IMHO, 잘 모르겠다면 double brackets을 사용하는게 좋을 듯 하네요.</p>\n<h3 id=\"하나-더\" style=\"position:relative;\"><a href=\"#%ED%95%98%EB%82%98-%EB%8D%94\" aria-label=\"하나 더 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>하나 더!</h3>\n<p>스크립트 작성 시 Regex를 쓸 때는 이른바 “교환법칙”이 성립하지 않습니다. 왜 그런지는 아래 설명을 함께 보시죠:</p>\n<blockquote>\n<p>When the ‘==’ and ‘!=’ operators are used, the string to the right of the operator is considered a pattern and matched according to the rules described below in <a href=\"https://www.gnu.org/software/bash/manual/html_node/Pattern-Matching.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pattern Matching</a>, as if the extglob shell option were enabled. The ‘=’ operator is identical to ‘==’. If the nocasematch shell option (see the description of shopt in <a href=\"https://www.gnu.org/software/bash/manual/html_node/The-Shopt-Builtin.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">The Shopt Builtin</a>) is enabled, the match is performed without regard to the case of alphabetic characters. The return value is 0 if the string matches (‘==’) or does not match (‘!=’) the pattern, and 1 otherwise.</p>\n<p>’==’ 및 ‘!=’ 연산자를 사용하면 연산자 오른쪽의 문자열이 패턴으로 간주되어 마치 extglob 셸 옵션이 활성화된 것처럼 패턴 일치에서 설명하는 규칙에 따라 일치됩니다. ’=’ 연산자는 ’==‘와 동일합니다. nocasematch 셸 옵션(The Shopt Builtin의 shopt 설명 참조)이 활성화되면 알파벳 대소문자 구분 없이 일치가 수행됩니다. 문자열이 패턴과 일치(’==‘)하거나 일치하지 않으면(‘!=’) 반환 값은 0이고 그렇지 않으면 1입니다. 인용된 부분이 문자열로 일치하도록 강제하기 위해 패턴의 일부를 인용할 수 있습니다.</p>\n</blockquote>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>공부하면 공부할 수록 더 정확히 알아야겠다는 것은 변함이 없습니다. 추후에도 Bash 스크립트를 더 봐야한다면, 공식 문서를 자주 살펴봐야겠군요.</p>\n<hr>\n<ul>\n<li>참고링크\n<ul>\n<li><a href=\"https://tldp.org/LDP/abs/html/comparison-ops.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">tldp.org의 배시 스크립트 강의 중</a></li>\n<li><a href=\"https://systemoverlord.com/2017/04/17/bash-extended-test-pattern-matching.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">extended-test의 패턴 매칭관련</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/tips/2022-10-08---meaning-of-z-in-shell-script//tips/2022-10-08-meaning-of-z-in-shell-script","tagSlugs":["/tag/linux/","/tag/shell/"]},"frontmatter":{"date":"2022-10-08T19:30:00.000Z","description":"Bash 스크립트를 작성하며 -z 라는 키워드에 대해 알게되었습니다. 더 나아가 쉘 스크립트에선 문자열을 어떻게 다루는지 살펴봅시다.","tags":["linux","shell"],"title":"Bash 스크립트의 문자열 비교에 대해 알아봅시다","socialImage":{"publicURL":{"publicURL":"/static/a987257fb708949394f663b920a257ca/snow.jpg"}}}}},"pageContext":{"slug":"/tips/2022-10-08---meaning-of-z-in-shell-script//tips/2022-10-08-meaning-of-z-in-shell-script"}},"staticQueryHashes":["251939775","357378587","401334301"]}