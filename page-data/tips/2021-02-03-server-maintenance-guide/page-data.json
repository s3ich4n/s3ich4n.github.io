{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/tips/2021-02-03-server-maintenance-guide","result":{"data":{"markdownRemark":{"id":"aadb2847-ca5e-55b4-b72c-73bacd425bec","html":"<p>서버 점검과 관련하여 좋은글들을 추합한 내용을 공유합니다.</p>\n<h1 id=\"작성에-앞서\" style=\"position:relative;\"><a href=\"#%EC%9E%91%EC%84%B1%EC%97%90-%EC%95%9E%EC%84%9C\" aria-label=\"작성에 앞서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>작성에 앞서…</h1>\n<p>이 글은 좋은 글을 가져와 제 입맛에 맞게 정리한 것에 불과합니다. 제 스스로 되새김질 하기 위해 썼기 때문에, 하단의 참조링크를 반드시 보실 것을 권해드립니다.</p>\n<h1 id=\"prerequisite\" style=\"position:relative;\"><a href=\"#prerequisite\" aria-label=\"prerequisite permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prerequisite</h1>\n<ul>\n<li>서버에 부하가 걸리는 명령은, <code class=\"language-text\">ionice</code> 커맨드를 붙여서 사용합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ionice <span class=\"token parameter variable\">-c</span> <span class=\"token number\">2</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">7</span> <span class=\"token function\">nice</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">19</span>\n<span class=\"token comment\"># -c 2: 디스크 I/O의 실행 우선 순위 조정</span>\n<span class=\"token comment\"># -n 7: 명령의 우선 순위를 낮추는</span>\n<span class=\"token comment\"># -n 19: 프로세스 실행 우선 순위를 가장 낮게</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">vi</code>로 파일확인 대신, <code class=\"language-text\">less</code>, <code class=\"language-text\">more</code> 혹은 <code class=\"language-text\">cat</code>을 사용합니다.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>명령</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>less</td>\n<td>파일의 내용을 표시하며 스크롤 있고, vi와 달리 전체 파일을 로드하지 않기 때문에 시작이 빠고 q를 누르면 종료합니다.</td>\n</tr>\n<tr>\n<td>more</td>\n<td>파일의 내용을 표시하며 스크롤 있고, 첫 행까지 표시하고 종료합니다. less와 달리 q 버튼으로 종료해도 출력이 터미널에 남아 있습니다.</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>작업 결과 등의 일시적인 파일 저장은 <code class=\"language-text\">/tmp</code> 와 <code class=\"language-text\">/var/tmp</code> 에 저장합니다(파일 삭제를 할 필요가 없음).</p>\n<ul>\n<li><code class=\"language-text\">/tmp</code>를 (<code class=\"language-text\">tmpfs</code>에 마운트 된 경우) 다시 시작하면 파일이 사라집니다.</li>\n<li><code class=\"language-text\">/var/tmp</code>는 다시 시작해도 파일은 사라지지 않고 <code class=\"language-text\">/tmp</code>보다 오랜 기간 유지됩니다.</li>\n<li><code class=\"language-text\">/tmp</code>(10일), <code class=\"language-text\">/var/tmp</code>(30일) 둘다 정기적으로 지워집니다.\n<ul>\n<li>서버에 설정된 사항은 <code class=\"language-text\">more /usr/lib/tmpfiles.d/tmp.conf</code> 로 확인 가능합니다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>history에서 커맨드 기록을 삭제해야 할 때는 다음 명령을 수행합니다:</p>\n<ul>\n<li><code class=\"language-text\">history | less</code>: 명령어를 수행한 번호를 파악합니다.</li>\n<li><code class=\"language-text\">history -d 42</code>: 명령어를 통해 스크립트 수행 기록을 삭제합니다.</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"1-서버-구동시간-확인\" style=\"position:relative;\"><a href=\"#1-%EC%84%9C%EB%B2%84-%EA%B5%AC%EB%8F%99%EC%8B%9C%EA%B0%84-%ED%99%95%EC%9D%B8\" aria-label=\"1 서버 구동시간 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 서버 구동시간 확인</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">uptime</span></code></pre></div>\n<h1 id=\"2-dmesg를-이용한-os-레벨의-에러메시지-특이사항-확인\" style=\"position:relative;\"><a href=\"#2-dmesg%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-os-%EB%A0%88%EB%B2%A8%EC%9D%98-%EC%97%90%EB%9F%AC%EB%A9%94%EC%8B%9C%EC%A7%80-%ED%8A%B9%EC%9D%B4%EC%82%AC%ED%95%AD-%ED%99%95%EC%9D%B8\" aria-label=\"2 dmesg를 이용한 os 레벨의 에러메시지 특이사항 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. dmesg를 이용한 OS 레벨의 에러메시지 특이사항 확인</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">dmesg</span> <span class=\"token operator\">|</span> <span class=\"token function\">tail</span></code></pre></div>\n<h1 id=\"3-메모리-확인\" style=\"position:relative;\"><a href=\"#3-%EB%A9%94%EB%AA%A8%EB%A6%AC-%ED%99%95%EC%9D%B8\" aria-label=\"3 메모리 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 메모리 확인</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">free</span> <span class=\"token parameter variable\">-hm</span> <span class=\"token comment\"># human readable, mebibyte 단위로 출력</span></code></pre></div>\n<ul>\n<li>또는 아래 스크립트를 작성해두어 메모리를 확인합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">LANG</span></span><span class=\"token operator\">=</span>C, <span class=\"token assign-left variable\"><span class=\"token environment constant\">LC_ALL</span></span><span class=\"token operator\">=</span>C\n\n<span class=\"token function\">free</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'\n    BEGIN{\n        total=0; used=0; available=0; rate=0;\n    }\n\n    /^Mem:/{\n        total = $2;\n        available = $7;\n    }\n\n    END {\n        used = total - available;\n        rate= 100 * used / total;\n        printf(\"total(KB)\\tused(KB)\\tavailable(KB)\\tused-rate(%)\\n\");\n        printf(\"%d \\t %d \\t %d \\t %.1f\\n\", total, used, available, rate);\n    }'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>실행결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">bash</span> memory-usage-free.sh\ntotal<span class=\"token punctuation\">(</span>KB<span class=\"token punctuation\">)</span>\tused<span class=\"token punctuation\">(</span>KB<span class=\"token punctuation\">)</span>\tavailable<span class=\"token punctuation\">(</span>KB<span class=\"token punctuation\">)</span>\tused-rate<span class=\"token punctuation\">(</span>%<span class=\"token punctuation\">)</span>\n<span class=\"token number\">7747768</span> \t<span class=\"token number\">4783068</span> \t<span class=\"token number\">2964700</span> \t    <span class=\"token number\">61.7</span></code></pre></div>\n<h1 id=\"4-파일-시스템-확인\" style=\"position:relative;\"><a href=\"#4-%ED%8C%8C%EC%9D%BC-%EC%8B%9C%EC%8A%A4%ED%85%9C-%ED%99%95%EC%9D%B8\" aria-label=\"4 파일 시스템 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 파일 시스템 확인</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 파일 시스템 확인</span>\n<span class=\"token function\">df</span> <span class=\"token parameter variable\">-Th</span>\n\n<span class=\"token comment\"># 디스크 사용량 순으로 확인하는 스크립트</span>\nionice <span class=\"token parameter variable\">-c</span> <span class=\"token number\">2</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">7</span> <span class=\"token function\">nice</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">19</span> <span class=\"token function\">du</span> <span class=\"token parameter variable\">-scm</span> /* <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token parameter variable\">-rn</span></code></pre></div>\n<ul>\n<li>scm 옵션\n<ul>\n<li>하위 디렉토리 숨기기 + 전체 디스크 사용량 표시 + M 바이트 형식으로 표시이고 rn 옵션은 사용량이 많은 순서로 + 수치로 비교합니다.</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"5-네트워크-상태-확인\" style=\"position:relative;\"><a href=\"#5-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%83%81%ED%83%9C-%ED%99%95%EC%9D%B8\" aria-label=\"5 네트워크 상태 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 네트워크 상태 확인</h1>\n<ul>\n<li>아래 스크립트를 통해 <code class=\"language-text\">TIME_WAIT</code> 및 <code class=\"language-text\">CLOSE_WAIT</code> 현황 파악을 수행합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token assign-left variable\">COUNT</span><span class=\"token operator\">=</span><span class=\"token number\">10</span>\n<span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">:</span>\n<span class=\"token keyword\">do</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$COUNT</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">then</span>\n                <span class=\"token builtin class-name\">printf</span> <span class=\"token string\">\"+--------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+ <span class=\"token entity\" title=\"\\n\">\\n</span>\"</span>\n                <span class=\"token builtin class-name\">printf</span> <span class=\"token string\">\"|  TIME  |ESTAB|LISTN|T_WAT|CLOSD|S_SEN|S_REC|C_WAT|F_WT1|F_WT2|CLOSI|L_ACK| <span class=\"token entity\" title=\"\\n\">\\n</span>\"</span>\n                <span class=\"token builtin class-name\">printf</span> <span class=\"token string\">\"+--------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+ <span class=\"token entity\" title=\"\\n\">\\n</span>\"</span>\n                <span class=\"token assign-left variable\">COUNT</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>\n        <span class=\"token keyword\">fi</span>\n        <span class=\"token assign-left variable\">COUNT</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">expr</span> $COUNT + <span class=\"token number\">1</span><span class=\"token variable\">`</span></span>\n        <span class=\"token assign-left variable\">TIME</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span>/bin/date +%H:%M:%S<span class=\"token variable\">`</span></span>\n        <span class=\"token builtin class-name\">printf</span> <span class=\"token string\">\"|%s\"</span> <span class=\"token variable\">${TIME}</span>\n        <span class=\"token function\">netstat</span> <span class=\"token parameter variable\">-an</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">\\</span>\n        <span class=\"token function\">awk</span> <span class=\"token string\">'BEGIN {\n                CLOSED = 0;\n                LISTEN = 0;\n                SYN_SENT = 0;\n                SYN_RECEIVED = 0;\n                ESTABLISHED = 0;\n                CLOSE_WAIT = 0;\n                FIN_WAIT_1 = 0;\n                FIN_WAIT_2 = 0;\n                CLOSING = 0;\n                LAST_ACK = 0;\n                TIME_WAIT = 0;\n                OTHER = 0;\n                }\n                $6 ~ /^CLOSED$/ { CLOSED++; }\n                $6 ~ /^CLOSE_WAIT$/ { CLOSE_WAIT++; }\n                $6 ~ /^CLOSING$/ { CLOSING++; }\n                $6 ~ /^ESTABLISHED$/ { ESTABLISHED++; }\n                $6 ~ /^FIN_WAIT1$/ { FIN_WAIT_1++; }\n                $6 ~ /^FIN_WAIT2$/ { FIN_WAIT_2++; }\n                $6 ~ /^LISTEN$/ { LISTEN++; }\n                $6 ~ /^LAST_ACK$/ { LAST_ACK++; }\n                $6 ~ /^SYN_SENT$/ { SYN_SENT++; }\n                $6 ~ /^SYN_RECV$/ { SYN_RECEIVED++; }\n                $6 ~ /^TIME_WAIT$/ { TIME_WAIT++; }\n\n                END {\n                        printf \"| %4d| %4d| %4d| %4d| %4d| %4d| %4d| %4d| %4d| %4d| %4d|\\n\",ESTABLISHED,LISTEN,TIME_WAIT,CLOSED,SYN_SENT,SYN_RECEIVED,CLOSE_WAIT,FIN_WAIT_1,FIN_WAIT_2,CLOSING,LAST_ACK;\n                }'</span>\n        <span class=\"token function\">sleep</span> <span class=\"token number\">2</span>\n<span class=\"token keyword\">done</span></code></pre></div>\n<ul>\n<li>실행결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">bash</span> netmon.sh\n+--------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+\n<span class=\"token operator\">|</span>  TIME  <span class=\"token operator\">|</span>ESTAB<span class=\"token operator\">|</span>LISTN<span class=\"token operator\">|</span>T_WAT<span class=\"token operator\">|</span>CLOSD<span class=\"token operator\">|</span>S_SEN<span class=\"token operator\">|</span>S_REC<span class=\"token operator\">|</span>C_WAT<span class=\"token operator\">|</span>F_WT1<span class=\"token operator\">|</span>F_WT2<span class=\"token operator\">|</span>CLOSI<span class=\"token operator\">|</span>L_ACK<span class=\"token operator\">|</span>\n+--------+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+\n<span class=\"token operator\">|</span><span class=\"token number\">18</span>:28:27<span class=\"token operator\">|</span>    <span class=\"token number\">1</span><span class=\"token operator\">|</span>    <span class=\"token number\">3</span><span class=\"token operator\">|</span>    <span class=\"token number\">0</span><span class=\"token operator\">|</span>    <span class=\"token number\">0</span><span class=\"token operator\">|</span>    <span class=\"token number\">0</span><span class=\"token operator\">|</span>    <span class=\"token number\">0</span><span class=\"token operator\">|</span>    <span class=\"token number\">0</span><span class=\"token operator\">|</span>    <span class=\"token number\">0</span><span class=\"token operator\">|</span>    <span class=\"token number\">0</span><span class=\"token operator\">|</span>    <span class=\"token number\">0</span><span class=\"token operator\">|</span>    <span class=\"token number\">0</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span><span class=\"token number\">18</span>:28:29<span class=\"token operator\">|</span>    <span class=\"token number\">1</span><span class=\"token operator\">|</span>    <span class=\"token number\">3</span><span class=\"token operator\">|</span>    <span class=\"token number\">0</span><span class=\"token operator\">|</span>    <span class=\"token number\">0</span><span class=\"token operator\">|</span>    <span class=\"token number\">0</span><span class=\"token operator\">|</span>    <span class=\"token number\">0</span><span class=\"token operator\">|</span>    <span class=\"token number\">0</span><span class=\"token operator\">|</span>    <span class=\"token number\">0</span><span class=\"token operator\">|</span>    <span class=\"token number\">0</span><span class=\"token operator\">|</span>    <span class=\"token number\">0</span><span class=\"token operator\">|</span>    <span class=\"token number\">0</span><span class=\"token operator\">|</span>\n<span class=\"token punctuation\">(</span>이하 생략<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>아래 스크립트를 통해 서버의 <code class=\"language-text\">LISTEN</code> 포트 별 커넥션 수 모니터링을 수행합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token function\">grep</span> <span class=\"token parameter variable\">-v</span> <span class=\"token string\">\"rem_address\"</span> /proc/net/tcp  <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'function hextodec(str,ret,n,i,k,c){\n    ret = 0\n    n = length(str)\n    for (i = 1; i &lt;= n; i++) {\n        c = tolower(substr(str, i, 1))\n        k = index(\"123456789abcdef\", c)\n        ret = ret * 16 + k\n    }\n    return ret\n} {x=hextodec(substr($2,index($2,\":\")-2,2)); for (i=5; i>0; i-=2) x = x\".\"hextodec(substr($2,i,2))}{print x\":\"hextodec(substr($2,index($2,\":\")+1,4))}'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">uniq</span> <span class=\"token parameter variable\">-c</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token parameter variable\">-rn</span></code></pre></div>\n<ul>\n<li>실행결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">bash</span> connection-port.sh\n      <span class=\"token number\">1</span> <span class=\"token number\">10.41</span>.36.207:22\n      <span class=\"token number\">1</span> <span class=\"token number\">0.0</span>.0.0:22</code></pre></div>\n<h1 id=\"6-부하상황-확인\" style=\"position:relative;\"><a href=\"#6-%EB%B6%80%ED%95%98%EC%83%81%ED%99%A9-%ED%99%95%EC%9D%B8\" aria-label=\"6 부하상황 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 부하상황 확인</h1>\n<ul>\n<li>\n<p>시스템에 구동중인 프로세스 및 상태 표시</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ionice <span class=\"token parameter variable\">-c</span> <span class=\"token number\">2</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">7</span> <span class=\"token function\">nice</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">19</span> <span class=\"token function\">top</span> <span class=\"token parameter variable\">-c</span></code></pre></div>\n<ul>\n<li>\n<p><code class=\"language-text\">-c</code>를 쓰면 프로세스 목록 창에 표시되는 프로세스 이름이 인자의 정보도 포함.</p>\n<ul>\n<li><code class=\"language-text\">top</code> 화면으로 이동한 다음 <code class=\"language-text\">1</code>을 입력하면 각 CPU 코어의 활용도를 개별적으로 볼 수 있습니다.</li>\n<li><code class=\"language-text\">E</code> (대소문자 구별)을 입력하면, 메모리 단위를 MiB, GiB 단위로</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">us(user)</code>: OS의 유저에서 사용한 CPU 비율. 애플리케이션 이 얼마만큼 CPU를 사용하고 있는지에 대한 지표.</p>\n</li>\n<li>\n<p><code class=\"language-text\">sy(system)</code>: OS의 커널에서 사용한 CPU 비율. system 값이 높은 경우 OS의 자원(파일 디스크립터와 포트 등)을 가진 경우입니다. 커널 파라미터 튜닝에 의해 부하를 낮출 수 있습니다. <code class=\"language-text\">fork</code> 횟수가 많은 등 부하가 높은 시스템 호출을 응용 프로그램이 했을 가능성이 있고 <code class=\"language-text\">strace</code>를 통해 더 자세하게 조사할 수 있습니다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">wa(iowait)</code>: 디스크 I/O에 사용된 CPU 비율. <code class=\"language-text\">iowait</code>가 높은 경우는 <code class=\"language-text\">iostat</code> 명령어를 통해 디스크 I/O 상황을 볼 수 있습니다.</p>\n</li>\n<li>\n<p>아래 표는 <code class=\"language-text\">top</code> 명령을 통해 볼 수 있는 지표들을 설명합니다:</p>\n<table>\n<thead>\n<tr>\n<th>PR</th>\n<th>NI</th>\n<th>VIRT</th>\n<th>RES</th>\n<th>SHR</th>\n<th>S</th>\n<th>%CPU</th>\n<th>%MEM</th>\n<th>TIME+</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>우선 순위</td>\n<td>상대 우선 순위</td>\n<td>가상 메모리</td>\n<td>실제 메모리</td>\n<td>공유 메모리</td>\n<td>상태</td>\n<td>CPU 사용률</td>\n<td>메모리 사용률</td>\n<td>실행 시간</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>S: Process Status</p>\n<table>\n<thead>\n<tr>\n<th>플래그</th>\n<th>의미</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">D</code></td>\n<td>인터럽트 불가</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">R</code></td>\n<td>실행 중</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">S</code></td>\n<td>잠</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">T</code></td>\n<td>정지 중</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">Z</code></td>\n<td>좀비 프로세스</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n</li>\n<li>\n<p>CPU 사용량, R/W에 대한 I/O량, 메모리 사용량</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">sar <span class=\"token parameter variable\">-u</span> <span class=\"token number\">3</span> <span class=\"token number\">10</span>\n\n<span class=\"token comment\"># 만일 시스템에 sar가 설치되어 있지 않을 경우, 설치를 수행하여 확인합니다.</span>\n<span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> sysstat</code></pre></div>\n<ul>\n<li><code class=\"language-text\">%user</code>: 사용자 영역에서의 CPU 사용률.</li>\n<li><code class=\"language-text\">%nice</code>: 우선 순위 변경된 프로세스를 통해 사용자 영역에서 CPU가 사용된 활용도.</li>\n<li><code class=\"language-text\">%system</code>: 커널 영역에서의 CPU 사용률.</li>\n<li><code class=\"language-text\">%iowiat</code>: 표시되는 경우 CPU가 I/O 작업을 기다리고 있었음을 나타내는데, 시간의 비율로 보여준다.</li>\n<li><code class=\"language-text\">%idle</code>: 디스크 I/O 대기에서 CPU가 기다리던 시간의 비율.</li>\n</ul>\n</li>\n<li>\n<p>CPU 사용률, 대기/차단된 프로세스 정보</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vmstat</span> <span class=\"token number\">1</span> <span class=\"token number\">10</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">r</code>: CPU에서 실행 및 순서를 기다리고있는 프로세스의 수. <code class=\"language-text\">r</code>값이 CPU 수보다 많으면 포화 상태입니다.</li>\n<li><code class=\"language-text\">b</code>: 차단된 프로세스 수입니다.</li>\n<li><code class=\"language-text\">si, so</code>: 스왑과 스왑. 제로가 아닌 값이 있으면 메모리 부족을 의미합니다.</li>\n<li><code class=\"language-text\">us, sy, id, wa, st</code>: CPU 시간의 분석에서 모든 CPU에 대한 평균 값. 각 사용자 시간, 시스템(커널) 시간, 유휴, 대기 시간, I/O 지연, steal된 시간.</li>\n</ul>\n</li>\n<li>\n<p>프로세스 당 상황</p>\n<ul>\n<li>CPU 점유율 순으로 내림차순 정렬 후, 점유율이 높은 프로세스를 확인</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ps</span> aux <span class=\"token parameter variable\">--sort</span><span class=\"token operator\">=</span>-%cpu</code></pre></div>\n</li>\n</ul>\n<h1 id=\"7-도커-컨테이너-상황-확인\" style=\"position:relative;\"><a href=\"#7-%EB%8F%84%EC%BB%A4-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EC%83%81%ED%99%A9-%ED%99%95%EC%9D%B8\" aria-label=\"7 도커 컨테이너 상황 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 도커 컨테이너 상황 확인</h1>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">docker</span> <span class=\"token function\">ps</span> <span class=\"token parameter variable\">-a</span>\n\n<span class=\"token comment\"># 이상있는 컨테이너 상황을 살펴보려고 할 때</span>\n\n<span class=\"token comment\"># 컨테이너 로그 보기</span>\n<span class=\"token function\">docker</span> logs <span class=\"token parameter variable\">-f</span> <span class=\"token variable\">$CONTAINER_NAME</span>\n\n<span class=\"token comment\"># tail 파라미터를 이용하여 로그의 마지막부터 보기</span>\n<span class=\"token function\">docker</span> logs <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">--tail</span> <span class=\"token number\">100</span> <span class=\"token variable\">$CONTAINER_NAME</span>\n\n<span class=\"token comment\"># 컨테이너 내부 설정 등을 보기</span>\n<span class=\"token function\">docker</span> inspect <span class=\"token variable\">$CONTAINER_NAME</span></code></pre></div>\n<h1 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h1>\n<p>다시금 말씀드리지만, 이 글은 좋은 글을 가져와 제 입맛에 맞게 정리한 것에 불과합니다. 제 스스로 되새김질 하기 위해 썼기 때문에 하단의 참조링크를 꼭 일독하시기를 권해드립니다.</p>\n<p>감사합니다.</p>\n<hr>\n<h1 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h1>\n<ul>\n<li><a href=\"https://brunch.co.kr/@daniellim/19\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://brunch.co.kr/@daniellim/19</a></li>\n<li><a href=\"https://www.mimul.com/blog/linux-server-operations/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.mimul.com/blog/linux-server-operations/</a></li>\n<li><a href=\"https://netflixtechblog.com/linux-performance-analysis-in-60-000-milliseconds-accc10403c55\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://netflixtechblog.com/linux-performance-analysis-in-60-000-milliseconds-accc10403c55</a></li>\n</ul>","fields":{"slug":"/tips/2021-02-03---server-maintenance-guide-101//tips/2021-02-03-server-maintenance-guide","tagSlugs":["/tag/maintenance/"]},"frontmatter":{"date":"2021-02-03T10:17:43.000Z","description":"서버 점검과 관련하여","tags":["maintenance"],"title":"간략히 써본 서버 점검 가이드","socialImage":{"publicURL":{"publicURL":"/static/1b52a91236bb4a4ef989c4bb3b638ecf/aa.jpg"}}}}},"pageContext":{"slug":"/tips/2021-02-03---server-maintenance-guide-101//tips/2021-02-03-server-maintenance-guide"}},"staticQueryHashes":["251939775","357378587","401334301"]}