{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/books/cosmic-python/2023-04-11-pt01-ch01","result":{"data":{"markdownRemark":{"id":"03bcf0f1-3785-5eb3-9bce-7035d151b963","html":"<p>이 내용은 “파이썬으로 살펴보는 아키텍처 패턴” 을 읽고 작성한 내용입니다. 블로그 게시글과, 작성한 코드를 함께 보시면 더욱 좋습니다.</p>\n<p>1장은 해당 코드를 살펴봐주세요. <a href=\"https://github.com/s3ich4n/cosmicpython-study/tree/main/pt1/ch01\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">코드 링크</a></p>\n<h1 id=\"1장-도메인-모델링\" style=\"position:relative;\"><a href=\"#1%EC%9E%A5-%EB%8F%84%EB%A9%94%EC%9D%B8-%EB%AA%A8%EB%8D%B8%EB%A7%81\" aria-label=\"1장 도메인 모델링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1장 도메인 모델링</h1>\n<p>이번 장에서는</p>\n<ul>\n<li>엔티티</li>\n<li>값 객체(Value object)</li>\n<li>도메인 서비스(Domain service)</li>\n</ul>\n<p>를 알아보도록 한다.</p>\n<h2 id=\"11-도메인-모델\" style=\"position:relative;\"><a href=\"#11-%EB%8F%84%EB%A9%94%EC%9D%B8-%EB%AA%A8%EB%8D%B8\" aria-label=\"11 도메인 모델 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1. 도메인 모델?</h2>\n<p>비즈니스 로직 계층을 도메인 모델로 부른다.</p>\n<ul>\n<li>도메인: 해결하려는 문제. 회사마다 다르겠죠? 회사에서 고객에게 뭘 내어줘야 할 지가 곧 도메인.</li>\n<li>모델: 유용한 특성을 포함하는 프로세스나 현상의 지도</li>\n</ul>\n<p>객체를 통한 개념의 추상화, 의인화를 하면 눈과 손에 잡히니 생각을 더 확장하기 쉽다.</p>\n<p>이걸 도출하는 설계가 DDD(Domain-driven Design)라 할 수 있다. 그리고 아래 책들은 읽고 오면 다음 내용이 수월하게 읽힙니다. 안 읽고 독파하면 ‘왜 저게 저렇게 됨?’ 이란 의문이 계속 생긴다고 생각한다. 위에서 아래 순으로 쭉 읽으면 좋다고 생각한다.</p>\n<ul>\n<li><a href=\"https://www.yes24.com/Product/Goods/18249021\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">객체지향의 사실과 오해</a></li>\n<li><a href=\"https://product.kyobobook.co.kr/detail/S000001766446\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">도메인 주도 설계 철저 입문</a></li>\n<li><a href=\"https://product.kyobobook.co.kr/detail/S000001766367\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">오브젝트</a></li>\n<li><a href=\"https://www.yes24.com/Product/Goods/48577718\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">(반 버논) 도메인 주도 설계 핵심</a></li>\n</ul>\n<p>책을 보면, 책 대로 나온 “고객의 주문에 할당하는 프로세스를 조율”하기 위해 시스템을 배치한 다이어그램이 나온다. 이런 주요 모델부터 뽑아서 시작하면 될 것이다.</p>\n<h2 id=\"12-도메인-언어-탐구\" style=\"position:relative;\"><a href=\"#12-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%96%B8%EC%96%B4-%ED%83%90%EA%B5%AC\" aria-label=\"12 도메인 언어 탐구 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2. 도메인 언어 탐구</h2>\n<p>이걸 하기 위해 유비쿼터스 언어, DSL 등의 각종 도구를 들고와서 포스트잇으로 나눈다. 각 파트 사람이 둘러앉아 뭐가 뭐다 하는 논의를 잘 거치면 된다는 뜻이다.</p>\n<h2 id=\"13-도메인-모델-단위-테스트\" style=\"position:relative;\"><a href=\"#13-%EB%8F%84%EB%A9%94%EC%9D%B8-%EB%AA%A8%EB%8D%B8-%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"13 도메인 모델 단위 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.3. 도메인 모델 단위 테스트</h2>\n<p>도메인을 만든다. 그냥 클래스로 만들고 불변객체에 대해서도 만든다.</p>\n<p>불변객체는 <code class=\"language-text\">@dataclass(frozen=True)</code> 로 만들 수 있다.</p>\n<p>코드를 작성하더라도 아래와 같이 접근한다.</p>\n<ul>\n<li>테스트 먼저, 개념 다음</li>\n<li>도메인 전문가들의 언어를 따르고, 그 예제를 코드로 옮긴 후 계속해서 나아간다(그래야 실제 요구사항을 반영하는 것이니).</li>\n</ul>\n<h3 id=\"131-vo로-쓰기-좋은-dataclass\" style=\"position:relative;\"><a href=\"#131-vo%EB%A1%9C-%EC%93%B0%EA%B8%B0-%EC%A2%8B%EC%9D%80-dataclass\" aria-label=\"131 vo로 쓰기 좋은 dataclass permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.3.1. VO로 쓰기 좋은 <code class=\"language-text\">@dataclass</code></h3>\n<p><code class=\"language-text\">dataclass</code> 는 VO로 쓰기 좋다. value equality(값 동등성)을 부여할 수 있다. 얘는 데이터는 있고 식별자(ID)가 없다.</p>\n<h3 id=\"132-vo와-엔티티\" style=\"position:relative;\"><a href=\"#132-vo%EC%99%80-%EC%97%94%ED%8B%B0%ED%8B%B0\" aria-label=\"132 vo와 엔티티 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.3.2 VO와 엔티티</h3>\n<p>엔티티는 정체성이 있다. 객체를 식별할 유일무이한 값이 있단 뜻이다<sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup>. 파이썬에선 이를 위해 <code class=\"language-text\">__eq__(self, other)</code> 매직 메소드와 <code class=\"language-text\">__hash__(self)</code> 매직 메소드를 만든다. 이걸 통해서 엔티의 identity에 대한 동일성 점검을 구현할 수 있다. 책에선 <a href=\"https://docs.python.org/3/glossary.html#term-hashable\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">파이썬에서의 hashable</a> 의 뜻을 설명한 공식문서 경로와 <a href=\"https://hynek.me/articles/hashes-and-equality/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">이 링크</a>를 통해 소개한다.</p>\n<h2 id=\"14-도메인-서비스-함수\" style=\"position:relative;\"><a href=\"#14-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%95%A8%EC%88%98\" aria-label=\"14 도메인 서비스 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.4. 도메인 서비스 함수</h2>\n<p>모든걸 객체로 만들 필요는 없다.</p>\n<p>필요하면 파이썬은 그걸 객체화할 필요가 없다. 함수로 만들고 처리하면 되니까. → ‘동사’ 로 표현되는 부분을 표현하려면 그냥 함수로 풀어쓰면 된다.</p>\n<p>근데 이런 식으로 도메인 서비스를 죄다 만들면 객체가 아니라 도메인 서비스 함수에 힘이 더 실리게 된다. 그렇게 힘이 잔뜩 빠진 도메인 객체를 <a href=\"https://martinfowler.com/bliki/AnemicDomainModel.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">anemic domain model</a> 이라 일컫는다.</p>\n<h3 id=\"141-매직-메소드-쓸-때-pythonic-idioms-를-써먹으려면\" style=\"position:relative;\"><a href=\"#141-%EB%A7%A4%EC%A7%81-%EB%A9%94%EC%86%8C%EB%93%9C-%EC%93%B8-%EB%95%8C-pythonic-idioms-%EB%A5%BC-%EC%8D%A8%EB%A8%B9%EC%9C%BC%EB%A0%A4%EB%A9%B4\" aria-label=\"141 매직 메소드 쓸 때 pythonic idioms 를 써먹으려면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.4.1 매직 메소드 쓸 때 pythonic idioms 를 써먹으려면?</h3>\n<p><code class=\"language-text\">next()</code>, <code class=\"language-text\">sorted()</code> 를 구현하려면 도메인 모델 내의 <code class=\"language-text\">__gt__</code> 가 구현되어야 한다.</p>\n<h3 id=\"142-예외를-사용한-도메인-개념-표현\" style=\"position:relative;\"><a href=\"#142-%EC%98%88%EC%99%B8%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%8F%84%EB%A9%94%EC%9D%B8-%EA%B0%9C%EB%85%90-%ED%91%9C%ED%98%84\" aria-label=\"142 예외를 사용한 도메인 개념 표현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.4.2 예외를 사용한 도메인 개념 표현</h3>\n<p>도메인 전문가하고 얘기하다보면 ‘이건 이렇게 할 수 없습니다’ 가 도출되는데, 이걸 예외로직으로 풀어내면 된다.</p>\n<p>그러고보니 도메인 개념 안에도 별도의 exception을 도출해서 써먹으면 좋을 것 같다…</p>\n<h1 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h1>\n<ul>\n<li>이 방법론은 DDD로 설계 후 도메인 모델을 도출하고 작업하는걸 권장한다. 그렇게 시작한 프로젝트라면 무리없이 작업가능하다</li>\n<li>도메인 모델에 주요 개념들이 계속해서 들어갈거다.</li>\n<li>엔티티 구현 시\n<ul>\n<li>파이썬의  <code class=\"language-text\">__eq__(self, other)</code> 매직 메소드와 <code class=\"language-text\">__hash__(self)</code> 매직 메소드를 오버라이딩해서 객체간의 동일함을 점검할 수 있도록 하자</li>\n<li>객체를 파이썬스럽게(pythonic) 써먹으려면 매직메소드를 내 논리에 맞게 오버라이딩해서 써먹어보자</li>\n</ul>\n</li>\n<li>VO는 <code class=\"language-text\">@dataclass(frozen=True)</code>  을 사용하라</li>\n<li>‘상속 보다는 구성을 사용하라’ 라는 유명한 말을 파이썬에서 써먹을 때, 저자는 <a href=\"https://peps.python.org/pep-0544/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PEP 544 (프로토콜)</a>을 활용하라고 한다.</li>\n</ul>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-1\">자바로 치면 <code class=\"language-text\">hashCode()</code> , <code class=\"language-text\">equals()</code> 같은걸로 객체의 유일성 제공 및 동등함 부여를 체크한다 라는 말<a href=\"#fnref-1\" class=\"footnote-backref\">↩</a></li>\n</ol>\n</div>","fields":{"slug":"/books/cosmic-python/2023-04-11---pt01-ch01//books/cosmic-python/2023-04-11-pt01-ch01","tagSlugs":["/tag/ddd/","/tag/books/","/tag/backend/","/tag/python/"]},"frontmatter":{"date":"2023-04-11T17:55:00.000Z","description":"파이썬으로 살펴보는 아키텍처 패턴을 읽고 이해한 내용을 작성합니다. 챕터 1, 도메인 모델링에 대한 내용입니다.","tags":["ddd","books","backend","python"],"title":"파이썬으로 살펴보는 아키텍처 패턴 (1)","socialImage":{"publicURL":{"publicURL":"/static/66b1d3acbf31f0d2ad20eee928a14aaa/universe.jpg"}}}}},"pageContext":{"slug":"/books/cosmic-python/2023-04-11---pt01-ch01//books/cosmic-python/2023-04-11-pt01-ch01"}},"staticQueryHashes":["251939775","357378587","401334301"]}