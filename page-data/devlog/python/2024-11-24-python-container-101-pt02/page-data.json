{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/devlog/python/2024-11-24-python-container-101-pt02","result":{"data":{"markdownRemark":{"id":"787ceffa-c6ec-5cdc-b82d-3e98db34159c","html":"<p>이번 게시글에서는 Debian 기반의 컨테이너와 Alpine 기반의 컨테이너 간 성능을 비교해보도록 하겠습니다.</p>\n<p>지난 게시글에는 분명 이렇게 소개했습니다.</p>\n<ul>\n<li>I/O bound 태스크 중심: API 서비스를 만들고, DB에는 1억개의 데이터을 추가한 후, 쿼리 테스트 및 부하 테스트를 수행하여 성능을 리포트</li>\n<li>CPU bound 태스크 중심: 매우 큰 데이터를 pandas로 처리, matplotlib으로 연산하게 구성해보고 성능을 리포트</li>\n</ul>\n<p>하지만, 구동 시간이 너무 오래걸려 본 게시글에는 테스트 방안을 “소개”하고, 글을 수정하여 보강할 예정입니다. 벌써부터 이렇게 말씀드리는 점 양해 부탁드립니다. 🙇🙇</p>\n<p>아래와 같이 변경될 예정입니다:</p>\n<ul>\n<li>I/O bound 태스크 중심: <del>API 서비스를 만들고</del>, DB에는 10만 개의 데이터을 추가한 후, 쿼리 테스트 <del>및 부하 테스트를</del> 수행하여 성능을 리포트</li>\n<li>CPU bound 태스크 중심: K-means clustering 과 랜덤 포레스트 기법을 <del>SVD 연산(준비만 되어있습니다!)</del> 사용하여 <del>매우 큰 데이터를 pandas로 처리, matplotlib으로 연산하게 구성해보고</del> CPU, 메모리 사용량을 리포트</li>\n</ul>\n<p>그렇다면, 목표와 준비 후, 가절을 세우고 직접 실험해봅시다.</p>\n<h1 id=\"목표\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%ED%91%9C\" aria-label=\"목표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>목표</strong></h1>\n<p>파이썬으로 작성한 cpu bound task와 io bound task 를 각각 컨테이너화 했을 때, glibc, musl 구현체의 성능 벤치마킹을 통해 적절한 구현체가 무엇인지 파악해봅시다.</p>\n<h2 id=\"준비\" style=\"position:relative;\"><a href=\"#%EC%A4%80%EB%B9%84\" aria-label=\"준비 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>준비</strong></h2>\n<ol>\n<li>c 라이브러리 구현체 선택\n<ul>\n<li>앞어 설명드린 바 대로, C 라이브러리의 구현체는 glibc/musl 이 있습니다.</li>\n</ul>\n</li>\n<li>저희는 2부에서 설명드린 바와 같이, 도커 컨테이너를 아래와 같이 선택하기로 했습니다\n<ul>\n<li><code class=\"language-text\">glibc</code> C 라이브러리 기반의 운영체제 이미지</li>\n<li><code class=\"language-text\">musl</code> C 라이브러리 기반의 운영체제 이밎</li>\n</ul>\n</li>\n<li>성능을 가리는 조건은 두가지로 한정짓습니다.\n<ol>\n<li>cpu bound\n<ul>\n<li>cpu를 많이 쓰는 태스크 (cpu 연산 그 자체)</li>\n</ul>\n</li>\n<li>io bound\n<ul>\n<li>io작업이 많은 태스크 (E.g., 서버 업/다운로드, db 콜)</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>해당 코드를 구동하는 환경은 아래와 같습니다\n<ol>\n<li>(로컬 테스트) - M3 Pro 맥북</li>\n<li>(<strong>예정</strong>, 실제 환경과 유사한 테스트) - GitHub Actions</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"cpu-bound-작업을-선별합시다\" style=\"position:relative;\"><a href=\"#cpu-bound-%EC%9E%91%EC%97%85%EC%9D%84-%EC%84%A0%EB%B3%84%ED%95%A9%EC%8B%9C%EB%8B%A4\" aria-label=\"cpu bound 작업을 선별합시다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CPU bound 작업을 선별합시다</h3>\n<p>CPU bound 태스크를 테스트하기 위해, 랜덤 포레스트와 K-means clustering을 각각 구동해보기로 했습니다.</p>\n<ol>\n<li>각종 머신러닝 기법을 진짜 맛만보는 코드를 작성했습니다. 아래는 제가 구동하려는 태스크들입니다.</li>\n</ol>\n<ul>\n<li>랜덤 포레스트\n<ul>\n<li>다량의 서로 다른 샘플과 특성이 반영된 decision tree를 구성한다.</li>\n<li>트리 연산은 병렬로 수행하고, 결과값은 다수결로/평균값으로 도출된다</li>\n<li>overfitting(과적합)을 방지하는 앙상블 방법이다</li>\n</ul>\n</li>\n<li>k-means clustering\n<ul>\n<li>k-means - 비지도 학습(unsupervised learning) 알고리즘 - 을 기반으로 한 클러스터링 알고리즘</li>\n<li>데이터 포인트들을 K개의 그룹(클러스터)으로 나눈다</li>\n<li>비슷한 특성을 가진 데이터끼리 같은 그룹으로 묶음</li>\n<li>“비슷하다”의 기준은 데이터 포인트 간의 거리 (주로 유클리드 거리 사용)</li>\n</ul>\n</li>\n</ul>\n<p>이 태스크로 선정한 이유는 아래와 같습니다:</p>\n<ol>\n<li>여러 복합적인 연산을 수행하기 위해 CPython 구현체나 C 코드로 빌드된 코드를 사용함으로 인해 발생하는 성능차이가 분명히 있을 것이라고 생각했기 때문입니다.</li>\n<li>단순 연산(소수 구하기, 해쉬연산 지속적으로 수행하기)는 CPU 레벨에서 최적화되어 인터프리트 되면 크게 의미없다고 판단했기 때문입니다.</li>\n</ol>\n<h3 id=\"io-bound-작업을-선별합니다\" style=\"position:relative;\"><a href=\"#io-bound-%EC%9E%91%EC%97%85%EC%9D%84-%EC%84%A0%EB%B3%84%ED%95%A9%EB%8B%88%EB%8B%A4\" aria-label=\"io bound 작업을 선별합니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IO bound 작업을 선별합니다.</h3>\n<p>아래와 같이 테이블 구성</p>\n<ol>\n<li>기관 테이블을 구성, 기관의 고유식별자를 fk로 쓰는 ‘기관정보’ 테이블 구성</li>\n<li>유저 테이블을 생성</li>\n<li>이 테이블의 uuid 값을 fk로 쓰는 테이블을 아래와 같이 구성\n<ul>\n<li>‘유저 개인정보’</li>\n<li>‘유저 프로필 정보’</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"가설\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%84%A4\" aria-label=\"가설 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>가설</strong></h1>\n<p>이번 실험을 통해 세운 가설은 아래와 같습니다.</p>\n<ul>\n<li>glibc, musl은 cpu bound task, io bound task 별로 성능차이가 있을 것입니다.\n<ul>\n<li>근거: 여러 작업(precondition, postcondition 이나 실제 구현체 이용)을 많이 하면 각 구현체별 성능차가 있을 것이기 때문입니다.</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"작업-순서\" style=\"position:relative;\"><a href=\"#%EC%9E%91%EC%97%85-%EC%88%9C%EC%84%9C\" aria-label=\"작업 순서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>작업 순서</strong></h1>\n<p>여기서부터는 작성한 코드를 참고해주세요. 코드는 <a href=\"\">이 github 링크</a> 에 준비되어 있습니다.</p>\n<ol>\n<li>컨테이너 만들기\n<ol>\n<li>debian based (slim 이미지인가, 아닌가의 차이도 명확한지 파악 필요)</li>\n<li>alpine based</li>\n</ol>\n</li>\n<li>cpu bound task를 수행하는 코드 작성하기 (wip)\n<ol>\n<li>random forest를 병렬 작업하는 코드</li>\n<li>k-means clustering을 병렬 작업하는 코드</li>\n</ol>\n</li>\n<li>io bound task를 수행하는 코드 작성하기\n<ol>\n<li>10만 건의 유저 데이터(하위 테이블 포함)를 추가하고, 개별 유저에 대해 개인정보를 추가하여 쿼리를 수행</li>\n<li>유저를 1000명씩 임의로 쿼리 수행</li>\n</ol>\n</li>\n<li>python 버전, 태스크 별로 각각 테스트 수행</li>\n</ol>\n<h1 id=\"리뷰-1\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EB%B7%B0-1\" aria-label=\"리뷰 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>리뷰 (1)</strong></h1>\n<p>하지만 작업 중간에, 아래와 같은 리뷰사항을 받고 태스크의 내용을 한 번 수정했습니다. 확실히 조사가 필요한 부분 및 보강이 가능한 부분에 대해 다듬었습니다.</p>\n<ol>\n<li>\n<p>cpu bound task 보완</p>\n<ul>\n<li>데이터셋 크기, 하이퍼 파라미터는 수행 전 별도로 기재하여 실험상에 어떻게 쓰였는지 글로 작성</li>\n<li>멀티 프로세싱을 고려해야하나? - 현재는 포기\n<ul>\n<li>(“확실한” 조사 필요) 파이썬에서 이런 태스크가 GIL이 처리하려면 <code class=\"language-text\">n_jobs</code> 파라미터 만으로 처리가능한지</li>\n<li>(“확실한” 조사 필요) 이걸 컨테이너로 처리하면 환경변수로 처리하고, 개별 컨테이너 별 부여받은 최대 CPU만큼 쓰면 되는지</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>io bound task 보완</p>\n<ul>\n<li>rdbms는 postgres 15버전 사용 예정.</li>\n<li><del>커넥션 풀링은 sqlalchemy의 기본 사용량을 써보고, 너무 처참한 p95 값이 나오면 (1초 이상) 조절 예정</del> (API로 부하 테스트까지 해보는 것이 목표입니다만, 거기까지는 아직 진행을 못했습니다.. 🥲)</li>\n<li>쿼리 유형 다각화 - 어떻게 진행하면 좋을지?\n<ul>\n<li>실질적으로 많이 일어나는건 쿼리라고 판단함</li>\n</ul>\n</li>\n<li>db에 추가하는 건 어떻게 보면 테스트 데이터 준비과정으로 이해하고, 쿼리의 성능을 살펴보는 것이 중요할 것으로 판단. 일반적인 시스템에서 추가보다는 조회가 훨씬 더 많이 일어나기 때문.</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"실제-실험결과\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%A0%9C-%EC%8B%A4%ED%97%98%EA%B2%B0%EA%B3%BC\" aria-label=\"실제 실험결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>실제 실험결과</strong></h1>\n<p>실험 결과는 위에서 소개시켜드렸던 결과로 구동하려 합니다.</p>\n<h2 id=\"cpu-bound-태스크의-결과-1---random-forest\" style=\"position:relative;\"><a href=\"#cpu-bound-%ED%83%9C%EC%8A%A4%ED%81%AC%EC%9D%98-%EA%B2%B0%EA%B3%BC-1---random-forest\" aria-label=\"cpu bound 태스크의 결과 1   random forest permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CPU bound 태스크의 결과 (1) - Random forest</h2>\n<p>Debian 기반의 컨테이너로 CPU bound 태스크를 구동해본 결과는 아래와 같았습니다:</p>\n<table>\n<thead>\n<tr>\n<th>Image</th>\n<th>Version</th>\n<th>Trees</th>\n<th>Training (s)</th>\n<th>Prediction (s)</th>\n<th>Total (s)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Alpine</td>\n<td><code class=\"language-text\">3.12</code></td>\n<td>1</td>\n<td>1.87</td>\n<td>0.02</td>\n<td>1.89</td>\n</tr>\n<tr>\n<td>Alpine</td>\n<td><code class=\"language-text\">3.12</code></td>\n<td>10</td>\n<td>5.98</td>\n<td>0.06</td>\n<td>6.04</td>\n</tr>\n<tr>\n<td>Alpine</td>\n<td><code class=\"language-text\">3.12</code></td>\n<td>100</td>\n<td>46.62</td>\n<td>0.44</td>\n<td>47.06</td>\n</tr>\n<tr>\n<td>Alpine</td>\n<td><code class=\"language-text\">3.13</code></td>\n<td>1</td>\n<td>2.40</td>\n<td>0.03</td>\n<td>2.43</td>\n</tr>\n<tr>\n<td>Alpine</td>\n<td><code class=\"language-text\">3.13</code></td>\n<td>10</td>\n<td>6.16</td>\n<td>0.07</td>\n<td>6.23</td>\n</tr>\n<tr>\n<td>Alpine</td>\n<td><code class=\"language-text\">3.13</code></td>\n<td>100</td>\n<td>48.25</td>\n<td>0.53</td>\n<td>48.78</td>\n</tr>\n<tr>\n<td>Debian</td>\n<td><code class=\"language-text\">3.12</code></td>\n<td>1</td>\n<td>1.93</td>\n<td>0.02</td>\n<td>1.96</td>\n</tr>\n<tr>\n<td>Debian</td>\n<td><code class=\"language-text\">3.12</code></td>\n<td>10</td>\n<td>5.93</td>\n<td>0.07</td>\n<td>6.00</td>\n</tr>\n<tr>\n<td>Debian</td>\n<td><code class=\"language-text\">3.12</code></td>\n<td>100</td>\n<td>46.82</td>\n<td>0.42</td>\n<td>47.24</td>\n</tr>\n<tr>\n<td>Debian</td>\n<td><code class=\"language-text\">3.13</code></td>\n<td>1</td>\n<td>2.35</td>\n<td>0.03</td>\n<td>2.38</td>\n</tr>\n<tr>\n<td>Debian</td>\n<td><code class=\"language-text\">3.13</code></td>\n<td>10</td>\n<td>6.34</td>\n<td>0.10</td>\n<td>6.44</td>\n</tr>\n<tr>\n<td>Debian</td>\n<td><code class=\"language-text\">3.13</code></td>\n<td>100</td>\n<td>49.17</td>\n<td>0.49</td>\n<td>49.66</td>\n</tr>\n</tbody>\n</table>\n<details>\n<summary>베이스 이미지 - Alpine 3.12 의 작업결과</summary>\n<div class=\"gatsby-highlight\" data-language=\"log\"><pre class=\"language-log\"><code class=\"language-log\"><span class=\"token property\">Dataset generated:</span> <span class=\"token number\">100000</span> samples with <span class=\"token number\">100</span> features\n\nTesting RandomForest with <span class=\"token number\">1</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">1.87</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.02</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">1.89</span> seconds\n\nTesting RandomForest with <span class=\"token number\">2</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">1.92</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.03</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">1.95</span> seconds\n\nTesting RandomForest with <span class=\"token number\">5</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">3.51</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.05</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">3.56</span> seconds\n\nTesting RandomForest with <span class=\"token number\">10</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">5.98</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.06</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">6.04</span> seconds\n\nTesting RandomForest with <span class=\"token number\">25</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">11.93</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.14</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">12.07</span> seconds\n\nTesting RandomForest with <span class=\"token number\">50</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">22.90</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.24</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">23.14</span> seconds\n\nTesting RandomForest with <span class=\"token number\">100</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">46.62</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.44</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">47.06</span> seconds\n\n<span class=\"token property\">Summary:</span>\n Trees   Train<span class=\"token operator\">(</span>s<span class=\"token operator\">)</span> Predict<span class=\"token operator\">(</span>s<span class=\"token operator\">)</span>   Total<span class=\"token operator\">(</span>s<span class=\"token operator\">)</span>\n<span class=\"token separator comment\">----------------------------------------</span>\n     <span class=\"token number\">1</span>       <span class=\"token number\">1.87</span>       <span class=\"token number\">0.02</span>       <span class=\"token number\">1.89</span>\n     <span class=\"token number\">2</span>       <span class=\"token number\">1.92</span>       <span class=\"token number\">0.03</span>       <span class=\"token number\">1.95</span>\n     <span class=\"token number\">5</span>       <span class=\"token number\">3.51</span>       <span class=\"token number\">0.05</span>       <span class=\"token number\">3.56</span>\n    <span class=\"token number\">10</span>       <span class=\"token number\">5.98</span>       <span class=\"token number\">0.06</span>       <span class=\"token number\">6.04</span>\n    <span class=\"token number\">25</span>      <span class=\"token number\">11.93</span>       <span class=\"token number\">0.14</span>      <span class=\"token number\">12.07</span>\n    <span class=\"token number\">50</span>      <span class=\"token number\">22.90</span>       <span class=\"token number\">0.24</span>      <span class=\"token number\">23.14</span>\n   <span class=\"token number\">100</span>      <span class=\"token number\">46.62</span>       <span class=\"token number\">0.44</span>      <span class=\"token number\">47.06</span></code></pre></div>\n</details>\n<details>\n<summary>베이스 이미지 - Alpine 3.13 의 작업결과</summary>\n<div class=\"gatsby-highlight\" data-language=\"log\"><pre class=\"language-log\"><code class=\"language-log\"><span class=\"token property\">Dataset generated:</span> <span class=\"token number\">100000</span> samples with <span class=\"token number\">100</span> features\n\nTesting RandomForest with <span class=\"token number\">1</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">2.40</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.03</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">2.43</span> seconds\n\nTesting RandomForest with <span class=\"token number\">2</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">2.32</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.05</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">2.37</span> seconds\n\nTesting RandomForest with <span class=\"token number\">5</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">4.15</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.08</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">4.23</span> seconds\n\nTesting RandomForest with <span class=\"token number\">10</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">6.16</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.07</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">6.23</span> seconds\n\nTesting RandomForest with <span class=\"token number\">25</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">12.64</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.15</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">12.80</span> seconds\n\nTesting RandomForest with <span class=\"token number\">50</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">24.41</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.27</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">24.68</span> seconds\n\nTesting RandomForest with <span class=\"token number\">100</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">48.25</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.53</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">48.78</span> seconds\n\n<span class=\"token property\">Summary:</span>\n Trees   Train<span class=\"token operator\">(</span>s<span class=\"token operator\">)</span> Predict<span class=\"token operator\">(</span>s<span class=\"token operator\">)</span>   Total<span class=\"token operator\">(</span>s<span class=\"token operator\">)</span>\n<span class=\"token separator comment\">----------------------------------------</span>\n     <span class=\"token number\">1</span>       <span class=\"token number\">2.40</span>       <span class=\"token number\">0.03</span>       <span class=\"token number\">2.43</span>\n     <span class=\"token number\">2</span>       <span class=\"token number\">2.32</span>       <span class=\"token number\">0.05</span>       <span class=\"token number\">2.37</span>\n     <span class=\"token number\">5</span>       <span class=\"token number\">4.15</span>       <span class=\"token number\">0.08</span>       <span class=\"token number\">4.23</span>\n    <span class=\"token number\">10</span>       <span class=\"token number\">6.16</span>       <span class=\"token number\">0.07</span>       <span class=\"token number\">6.23</span>\n    <span class=\"token number\">25</span>      <span class=\"token number\">12.64</span>       <span class=\"token number\">0.15</span>      <span class=\"token number\">12.80</span>\n    <span class=\"token number\">50</span>      <span class=\"token number\">24.41</span>       <span class=\"token number\">0.27</span>      <span class=\"token number\">24.68</span>\n   <span class=\"token number\">100</span>      <span class=\"token number\">48.25</span>       <span class=\"token number\">0.53</span>      <span class=\"token number\">48.78</span></code></pre></div>\n</details>\n<details>\n<summary>베이스 이미지 - Debian 3.12 의 작업결과</summary>\n<div class=\"gatsby-highlight\" data-language=\"log\"><pre class=\"language-log\"><code class=\"language-log\"><span class=\"token property\">Dataset generated:</span> <span class=\"token number\">100000</span> samples with <span class=\"token number\">100</span> features\n\nTesting RandomForest with <span class=\"token number\">1</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">1.93</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.02</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">1.96</span> seconds\n\nTesting RandomForest with <span class=\"token number\">2</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">2.01</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.03</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">2.04</span> seconds\n\nTesting RandomForest with <span class=\"token number\">5</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">3.83</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.05</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">3.88</span> seconds\n\nTesting RandomForest with <span class=\"token number\">10</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">5.93</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.07</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">6.00</span> seconds\n\nTesting RandomForest with <span class=\"token number\">25</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">12.12</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.12</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">12.24</span> seconds\n\nTesting RandomForest with <span class=\"token number\">50</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">23.62</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.27</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">23.89</span> seconds\n\nTesting RandomForest with <span class=\"token number\">100</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">46.82</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.42</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">47.24</span> seconds\n\n<span class=\"token property\">Summary:</span>\n Trees   Train<span class=\"token operator\">(</span>s<span class=\"token operator\">)</span> Predict<span class=\"token operator\">(</span>s<span class=\"token operator\">)</span>   Total<span class=\"token operator\">(</span>s<span class=\"token operator\">)</span>\n<span class=\"token separator comment\">----------------------------------------</span>\n     <span class=\"token number\">1</span>       <span class=\"token number\">1.93</span>       <span class=\"token number\">0.02</span>       <span class=\"token number\">1.96</span>\n     <span class=\"token number\">2</span>       <span class=\"token number\">2.01</span>       <span class=\"token number\">0.03</span>       <span class=\"token number\">2.04</span>\n     <span class=\"token number\">5</span>       <span class=\"token number\">3.83</span>       <span class=\"token number\">0.05</span>       <span class=\"token number\">3.88</span>\n    <span class=\"token number\">10</span>       <span class=\"token number\">5.93</span>       <span class=\"token number\">0.07</span>       <span class=\"token number\">6.00</span>\n    <span class=\"token number\">25</span>      <span class=\"token number\">12.12</span>       <span class=\"token number\">0.12</span>      <span class=\"token number\">12.24</span>\n    <span class=\"token number\">50</span>      <span class=\"token number\">23.62</span>       <span class=\"token number\">0.27</span>      <span class=\"token number\">23.89</span>\n   <span class=\"token number\">100</span>      <span class=\"token number\">46.82</span>       <span class=\"token number\">0.42</span>      <span class=\"token number\">47.24</span></code></pre></div>\n</details>\n<details>\n<summary>베이스 이미지 - Debian 3.13 의 작업결과</summary>\n<div class=\"gatsby-highlight\" data-language=\"log\"><pre class=\"language-log\"><code class=\"language-log\"><span class=\"token property\">Dataset generated:</span> <span class=\"token number\">100000</span> samples with <span class=\"token number\">100</span> features\n\nTesting RandomForest with <span class=\"token number\">1</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">2.35</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.03</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">2.38</span> seconds\n\nTesting RandomForest with <span class=\"token number\">2</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">2.21</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.05</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">2.26</span> seconds\n\nTesting RandomForest with <span class=\"token number\">5</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">4.18</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.05</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">4.23</span> seconds\n\nTesting RandomForest with <span class=\"token number\">10</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">6.34</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.10</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">6.44</span> seconds\n\nTesting RandomForest with <span class=\"token number\">25</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">12.59</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.13</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">12.72</span> seconds\n\nTesting RandomForest with <span class=\"token number\">50</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">25.04</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.27</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">25.30</span> seconds\n\nTesting RandomForest with <span class=\"token number\">100</span> trees<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Training time:</span> <span class=\"token number\">49.17</span> seconds\n<span class=\"token property\">Prediction time:</span> <span class=\"token number\">0.49</span> seconds\n<span class=\"token property\">Total time:</span> <span class=\"token number\">49.66</span> seconds\n\n<span class=\"token property\">Summary:</span>\n Trees   Train<span class=\"token operator\">(</span>s<span class=\"token operator\">)</span> Predict<span class=\"token operator\">(</span>s<span class=\"token operator\">)</span>   Total<span class=\"token operator\">(</span>s<span class=\"token operator\">)</span>\n<span class=\"token separator comment\">----------------------------------------</span>\n     <span class=\"token number\">1</span>       <span class=\"token number\">2.35</span>       <span class=\"token number\">0.03</span>       <span class=\"token number\">2.38</span>\n     <span class=\"token number\">2</span>       <span class=\"token number\">2.21</span>       <span class=\"token number\">0.05</span>       <span class=\"token number\">2.26</span>\n     <span class=\"token number\">5</span>       <span class=\"token number\">4.18</span>       <span class=\"token number\">0.05</span>       <span class=\"token number\">4.23</span>\n    <span class=\"token number\">10</span>       <span class=\"token number\">6.34</span>       <span class=\"token number\">0.10</span>       <span class=\"token number\">6.44</span>\n    <span class=\"token number\">25</span>      <span class=\"token number\">12.59</span>       <span class=\"token number\">0.13</span>      <span class=\"token number\">12.72</span>\n    <span class=\"token number\">50</span>      <span class=\"token number\">25.04</span>       <span class=\"token number\">0.27</span>      <span class=\"token number\">25.30</span>\n   <span class=\"token number\">100</span>      <span class=\"token number\">49.17</span>       <span class=\"token number\">0.49</span>      <span class=\"token number\">49.66</span></code></pre></div>\n</details>\n<h2 id=\"cpu-bound-태스크의-결과-2---k-means-clustering\" style=\"position:relative;\"><a href=\"#cpu-bound-%ED%83%9C%EC%8A%A4%ED%81%AC%EC%9D%98-%EA%B2%B0%EA%B3%BC-2---k-means-clustering\" aria-label=\"cpu bound 태스크의 결과 2   k means clustering permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CPU bound 태스크의 결과 (2) - K-means clustering</h2>\n<p>표로 정리하면 아래와 같습니다:</p>\n<table>\n<thead>\n<tr>\n<th>Image</th>\n<th>Version</th>\n<th>Samples</th>\n<th>Clusters</th>\n<th>Execution Time (s)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Debian</td>\n<td><code class=\"language-text\">3.12</code></td>\n<td>1,000,000</td>\n<td>3</td>\n<td>4.72</td>\n</tr>\n<tr>\n<td>Debian</td>\n<td><code class=\"language-text\">3.12</code></td>\n<td>1,000,000</td>\n<td>5</td>\n<td>4.90</td>\n</tr>\n<tr>\n<td>Debian</td>\n<td><code class=\"language-text\">3.12</code></td>\n<td>5,000,000</td>\n<td>3</td>\n<td>10.37</td>\n</tr>\n<tr>\n<td>Debian</td>\n<td><code class=\"language-text\">3.12</code></td>\n<td>5,000,000</td>\n<td>5</td>\n<td>12.18</td>\n</tr>\n<tr>\n<td>Alpine</td>\n<td><code class=\"language-text\">3.12</code></td>\n<td>1,000,000</td>\n<td>3</td>\n<td>5.50</td>\n</tr>\n<tr>\n<td>Alpine</td>\n<td><code class=\"language-text\">3.12</code></td>\n<td>1,000,000</td>\n<td>5</td>\n<td>4.81</td>\n</tr>\n<tr>\n<td>Alpine</td>\n<td><code class=\"language-text\">3.12</code></td>\n<td>5,000,000</td>\n<td>3</td>\n<td>11.90</td>\n</tr>\n<tr>\n<td>Alpine</td>\n<td><code class=\"language-text\">3.12</code></td>\n<td>5,000,000</td>\n<td>5</td>\n<td>12.71</td>\n</tr>\n<tr>\n<td>Debian</td>\n<td><code class=\"language-text\">3.13</code></td>\n<td>100,000</td>\n<td>5</td>\n<td>2.74</td>\n</tr>\n<tr>\n<td>Debian</td>\n<td><code class=\"language-text\">3.13</code></td>\n<td>100,000</td>\n<td>7</td>\n<td>3.50</td>\n</tr>\n<tr>\n<td>Debian</td>\n<td><code class=\"language-text\">3.13</code></td>\n<td>500,000</td>\n<td>5</td>\n<td>6.92</td>\n</tr>\n<tr>\n<td>Debian</td>\n<td><code class=\"language-text\">3.13</code></td>\n<td>500,000</td>\n<td>7</td>\n<td>6.92</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>🍅 disclaimer</p>\n<p><code class=\"language-text\">scikit-learn</code> 의 공식 지원이 3.12 까지라, Alpine 리눅스에서는 3.13 베이스 이미지에서 구동이 어려웠습니다.</p>\n</blockquote>\n<details>\n<summary>베이스 이미지 - Alpine 3.12 의 작업결과</summary>\n<div class=\"gatsby-highlight\" data-language=\"log\"><pre class=\"language-log\"><code class=\"language-log\">Running benchmark for <span class=\"token number\">1000000</span> samples<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> clusters<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token property\">Execution time:</span> <span class=\"token number\">5.50</span> seconds\n<span class=\"token property\">Iterations:</span> <span class=\"token number\">2</span>\n<span class=\"token property\">Inertia:</span> <span class=\"token number\">128018685.50</span>\n<span class=\"token property\">Average CPU Usage:</span> <span class=\"token number\">801.99</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Average Memory Usage:</span> <span class=\"token number\">12.59</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak CPU Usage:</span> <span class=\"token number\">1261.70</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak Memory Usage:</span> <span class=\"token number\">17.07</span><span class=\"token operator\">%</span>\nRunning benchmark for <span class=\"token number\">1000000</span> samples<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span> clusters<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Execution time:</span> <span class=\"token number\">4.81</span> seconds\n<span class=\"token property\">Iterations:</span> <span class=\"token number\">2</span>\n<span class=\"token property\">Inertia:</span> <span class=\"token number\">128018441.10</span>\n<span class=\"token property\">Average CPU Usage:</span> <span class=\"token number\">1014.51</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Average Memory Usage:</span> <span class=\"token number\">23.78</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak CPU Usage:</span> <span class=\"token number\">1206.10</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak Memory Usage:</span> <span class=\"token number\">28.70</span><span class=\"token operator\">%</span>\nRunning benchmark for <span class=\"token number\">5000000</span> samples<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> clusters<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Execution time:</span> <span class=\"token number\">11.90</span> seconds\n<span class=\"token property\">Iterations:</span> <span class=\"token number\">2</span>\n<span class=\"token property\">Inertia:</span> <span class=\"token number\">640003227.45</span>\n<span class=\"token property\">Average CPU Usage:</span> <span class=\"token number\">723.35</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Average Memory Usage:</span> <span class=\"token number\">69.71</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak CPU Usage:</span> <span class=\"token number\">1208.10</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak Memory Usage:</span> <span class=\"token number\">92.17</span><span class=\"token operator\">%</span>\nRunning benchmark for <span class=\"token number\">5000000</span> samples<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span> clusters<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Execution time:</span> <span class=\"token number\">12.71</span> seconds\n<span class=\"token property\">Iterations:</span> <span class=\"token number\">2</span>\n<span class=\"token property\">Inertia:</span> <span class=\"token number\">640002946.03</span>\n<span class=\"token property\">Average CPU Usage:</span> <span class=\"token number\">945.65</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Average Memory Usage:</span> <span class=\"token number\">64.20</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak CPU Usage:</span> <span class=\"token number\">1206.70</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak Memory Usage:</span> <span class=\"token number\">90.08</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Plotting Data Summary:</span>\n<span class=\"token property\">Dataset Size:</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span> Clusters<span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n<span class=\"token property\">Execution Time:</span> <span class=\"token number\">5.50s</span>\n<span class=\"token property\">CPU Usage:</span> <span class=\"token number\">52</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1261.7</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Memory Usage:</span> <span class=\"token number\">52</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">6.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17.1</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Dataset Size:</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span> Clusters<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n<span class=\"token property\">Execution Time:</span> <span class=\"token number\">4.81s</span>\n<span class=\"token property\">CPU Usage:</span> <span class=\"token number\">47</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">93.4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1206.1</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Memory Usage:</span> <span class=\"token number\">47</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">18.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28.7</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Dataset Size:</span> <span class=\"token number\">5000000</span><span class=\"token punctuation\">,</span> Clusters<span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n<span class=\"token property\">Execution Time:</span> <span class=\"token number\">11.90s</span>\n<span class=\"token property\">CPU Usage:</span> <span class=\"token number\">112</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">47.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1208.1</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Memory Usage:</span> <span class=\"token number\">112</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">37.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">92.2</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Dataset Size:</span> <span class=\"token number\">5000000</span><span class=\"token punctuation\">,</span> Clusters<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n<span class=\"token property\">Execution Time:</span> <span class=\"token number\">12.71s</span>\n<span class=\"token property\">CPU Usage:</span> <span class=\"token number\">121</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">86.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1206.7</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Memory Usage:</span> <span class=\"token number\">121</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">35.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90.1</span><span class=\"token punctuation\">]</span></code></pre></div>\n</details>\n<details>\n<summary>(수행불가) 베이스 이미지 - Alpine 3.13 의 작업결과</summary>\n<p>구동 불가!</p>\n</details>\n<details>\n<summary>베이스 이미지 - Debian 3.12 의 작업결과</summary>\n<div class=\"gatsby-highlight\" data-language=\"log\"><pre class=\"language-log\"><code class=\"language-log\">Running benchmark for <span class=\"token number\">1000000</span> samples<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> clusters<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Execution time:</span> <span class=\"token number\">4.72</span> seconds\n<span class=\"token property\">Iterations:</span> <span class=\"token number\">2</span>\n<span class=\"token property\">Inertia:</span> <span class=\"token number\">128018685.50</span>\n<span class=\"token property\">Average CPU Usage:</span> <span class=\"token number\">907.44</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Average Memory Usage:</span> <span class=\"token number\">12.71</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak CPU Usage:</span> <span class=\"token number\">1199.30</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak Memory Usage:</span> <span class=\"token number\">17.33</span><span class=\"token operator\">%</span>\nRunning benchmark for <span class=\"token number\">1000000</span> samples<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span> clusters<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Execution time:</span> <span class=\"token number\">4.90</span> seconds\n<span class=\"token property\">Iterations:</span> <span class=\"token number\">2</span>\n<span class=\"token property\">Inertia:</span> <span class=\"token number\">128018441.10</span>\n<span class=\"token property\">Average CPU Usage:</span> <span class=\"token number\">1044.18</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Average Memory Usage:</span> <span class=\"token number\">12.94</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak CPU Usage:</span> <span class=\"token number\">1218.20</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak Memory Usage:</span> <span class=\"token number\">18.36</span><span class=\"token operator\">%</span>\nRunning benchmark for <span class=\"token number\">5000000</span> samples<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> clusters<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Execution time:</span> <span class=\"token number\">10.37</span> seconds\n<span class=\"token property\">Iterations:</span> <span class=\"token number\">2</span>\n<span class=\"token property\">Inertia:</span> <span class=\"token number\">640003227.45</span>\n<span class=\"token property\">Average CPU Usage:</span> <span class=\"token number\">793.64</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Average Memory Usage:</span> <span class=\"token number\">59.11</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak CPU Usage:</span> <span class=\"token number\">1208.20</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak Memory Usage:</span> <span class=\"token number\">83.59</span><span class=\"token operator\">%</span>\nRunning benchmark for <span class=\"token number\">5000000</span> samples<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span> clusters<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Execution time:</span> <span class=\"token number\">12.18</span> seconds\n<span class=\"token property\">Iterations:</span> <span class=\"token number\">2</span>\n<span class=\"token property\">Inertia:</span> <span class=\"token number\">640002946.03</span>\n<span class=\"token property\">Average CPU Usage:</span> <span class=\"token number\">959.31</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Average Memory Usage:</span> <span class=\"token number\">57.18</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak CPU Usage:</span> <span class=\"token number\">1210.40</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak Memory Usage:</span> <span class=\"token number\">83.59</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Plotting Data Summary:</span>\n<span class=\"token property\">Dataset Size:</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span> Clusters<span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n<span class=\"token property\">Execution Time:</span> <span class=\"token number\">4.72s</span>\n<span class=\"token property\">CPU Usage:</span> <span class=\"token number\">46</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1199.3</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Memory Usage:</span> <span class=\"token number\">46</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">6.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17.3</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Dataset Size:</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span> Clusters<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n<span class=\"token property\">Execution Time:</span> <span class=\"token number\">4.90s</span>\n<span class=\"token property\">CPU Usage:</span> <span class=\"token number\">48</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">93.4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1218.2</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Memory Usage:</span> <span class=\"token number\">48</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18.4</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Dataset Size:</span> <span class=\"token number\">5000000</span><span class=\"token punctuation\">,</span> Clusters<span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n<span class=\"token property\">Execution Time:</span> <span class=\"token number\">10.37s</span>\n<span class=\"token property\">CPU Usage:</span> <span class=\"token number\">100</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">96.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1208.2</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Memory Usage:</span> <span class=\"token number\">100</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">29.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">83.6</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Dataset Size:</span> <span class=\"token number\">5000000</span><span class=\"token punctuation\">,</span> Clusters<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n<span class=\"token property\">Execution Time:</span> <span class=\"token number\">12.18s</span>\n<span class=\"token property\">CPU Usage:</span> <span class=\"token number\">118</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">88.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1210.4</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Memory Usage:</span> <span class=\"token number\">118</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">29.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">83.6</span><span class=\"token punctuation\">]</span></code></pre></div>\n</details>\n<details>\n<summary>베이스 이미지 - Debian 3.13 의 작업결과</summary>\n<div class=\"gatsby-highlight\" data-language=\"log\"><pre class=\"language-log\"><code class=\"language-log\">Running benchmark for <span class=\"token number\">100000</span> samples<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span> clusters<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Execution time:</span> <span class=\"token number\">2.74</span> seconds\n<span class=\"token property\">Iterations:</span> <span class=\"token number\">2</span>\n<span class=\"token property\">Inertia:</span> <span class=\"token number\">12800855.22</span>\n<span class=\"token property\">Average CPU Usage:</span> <span class=\"token number\">392.67</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Average Memory Usage:</span> <span class=\"token number\">2.48</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak CPU Usage:</span> <span class=\"token number\">536.20</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak Memory Usage:</span> <span class=\"token number\">2.52</span><span class=\"token operator\">%</span>\nRunning benchmark for <span class=\"token number\">100000</span> samples<span class=\"token punctuation\">,</span> <span class=\"token number\">7</span> clusters<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Execution time:</span> <span class=\"token number\">3.50</span> seconds\n<span class=\"token property\">Iterations:</span> <span class=\"token number\">2</span>\n<span class=\"token property\">Inertia:</span> <span class=\"token number\">12800608.95</span>\n<span class=\"token property\">Average CPU Usage:</span> <span class=\"token number\">400.08</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Average Memory Usage:</span> <span class=\"token number\">2.50</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak CPU Usage:</span> <span class=\"token number\">564.40</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak Memory Usage:</span> <span class=\"token number\">2.52</span><span class=\"token operator\">%</span>\nRunning benchmark for <span class=\"token number\">500000</span> samples<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span> clusters<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Execution time:</span> <span class=\"token number\">6.92</span> seconds\n<span class=\"token property\">Iterations:</span> <span class=\"token number\">2</span>\n<span class=\"token property\">Inertia:</span> <span class=\"token number\">64009635.94</span>\n<span class=\"token property\">Average CPU Usage:</span> <span class=\"token number\">366.32</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Average Memory Usage:</span> <span class=\"token number\">7.00</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak CPU Usage:</span> <span class=\"token number\">671.20</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak Memory Usage:</span> <span class=\"token number\">9.58</span><span class=\"token operator\">%</span>\nRunning benchmark for <span class=\"token number\">500000</span> samples<span class=\"token punctuation\">,</span> <span class=\"token number\">7</span> clusters<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token property\">Execution time:</span> <span class=\"token number\">6.92</span> seconds\n<span class=\"token property\">Iterations:</span> <span class=\"token number\">2</span>\n<span class=\"token property\">Inertia:</span> <span class=\"token number\">64009455.56</span>\n<span class=\"token property\">Average CPU Usage:</span> <span class=\"token number\">382.56</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Average Memory Usage:</span> <span class=\"token number\">6.93</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak CPU Usage:</span> <span class=\"token number\">601.80</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Peak Memory Usage:</span> <span class=\"token number\">7.32</span><span class=\"token operator\">%</span>\n<span class=\"token property\">Plotting Data Summary:</span>\n<span class=\"token property\">Dataset Size:</span> <span class=\"token number\">100000</span><span class=\"token punctuation\">,</span> Clusters<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n<span class=\"token property\">Execution Time:</span> <span class=\"token number\">2.74s</span>\n<span class=\"token property\">CPU Usage:</span> <span class=\"token number\">26</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">536.2</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Memory Usage:</span> <span class=\"token number\">26</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Dataset Size:</span> <span class=\"token number\">100000</span><span class=\"token punctuation\">,</span> Clusters<span class=\"token operator\">:</span> <span class=\"token number\">7</span>\n<span class=\"token property\">Execution Time:</span> <span class=\"token number\">3.50s</span>\n<span class=\"token property\">CPU Usage:</span> <span class=\"token number\">33</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">157.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">564.4</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Memory Usage:</span> <span class=\"token number\">33</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Dataset Size:</span> <span class=\"token number\">500000</span><span class=\"token punctuation\">,</span> Clusters<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n<span class=\"token property\">Execution Time:</span> <span class=\"token number\">6.92s</span>\n<span class=\"token property\">CPU Usage:</span> <span class=\"token number\">64</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">97.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">671.2</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Memory Usage:</span> <span class=\"token number\">64</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9.6</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Dataset Size:</span> <span class=\"token number\">500000</span><span class=\"token punctuation\">,</span> Clusters<span class=\"token operator\">:</span> <span class=\"token number\">7</span>\n<span class=\"token property\">Execution Time:</span> <span class=\"token number\">6.92s</span>\n<span class=\"token property\">CPU Usage:</span> <span class=\"token number\">65</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">95.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">601.8</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Memory Usage:</span> <span class=\"token number\">65</span> points<span class=\"token punctuation\">,</span> Range<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7.3</span><span class=\"token punctuation\">]</span></code></pre></div>\n</details>\n<h2 id=\"io-bound-태스크의-결과-1---10만-건의-데이터-조회-결과\" style=\"position:relative;\"><a href=\"#io-bound-%ED%83%9C%EC%8A%A4%ED%81%AC%EC%9D%98-%EA%B2%B0%EA%B3%BC-1---10%EB%A7%8C-%EA%B1%B4%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A1%B0%ED%9A%8C-%EA%B2%B0%EA%B3%BC\" aria-label=\"io bound 태스크의 결과 1   10만 건의 데이터 조회 결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>I/O bound 태스크의 결과 (1) - 10만 건의 데이터 조회 결과</h2>\n<p>Debian 기반의 컨테이너로 IO bound 태스크를 구동해본 결과는 아래와 같았습니다:</p>\n<p>Alpine 기반의 컨테이너로 IO bound 태스크를 구동해본 결과는 아래와 같았습니다:</p>\n<h1 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h1>\n<h2 id=\"cpu-bound\" style=\"position:relative;\"><a href=\"#cpu-bound\" aria-label=\"cpu bound permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CPU bound</h2>\n<p>의외로, 미미한 차이가 있었고 심지어는 Alpine 기반 컨테이너가 근소하게나마 빨랐습니다.</p>\n<h2 id=\"io-bound\" style=\"position:relative;\"><a href=\"#io-bound\" aria-label=\"io bound permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>I/O bound</h2>\n<h1 id=\"종합하여\" style=\"position:relative;\"><a href=\"#%EC%A2%85%ED%95%A9%ED%95%98%EC%97%AC\" aria-label=\"종합하여 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>종합하여</h1>\n<p>CPU bound task에서 의외로 미미한 차이로 Alpine이 앞섰다는 점에서 놀라웠습니다.</p>","fields":{"slug":"/devlog/python/2024-11-24---python-container-101-pt03//devlog/python/2024-11-24-python-container-101-pt02","tagSlugs":["/tag/python/","/tag/geultto/"]},"frontmatter":{"date":"2024-11-24T23:57:00.000Z","description":"파이썬 컨테이너 최적화 기법을 이용하여 CPU bound 작업과 IO bound 작업을 직접 구동해봅니다.","tags":["python","geultto"],"title":"[연재] 파이썬 컨테이너 선택 제 3형 - 파이썬 컨테이너 실전비교","socialImage":{"publicURL":{"publicURL":"/static/f362749d11992f125f0cdfe8205b50ef/sangdo-dong.jpg"}}}}},"pageContext":{"slug":"/devlog/python/2024-11-24---python-container-101-pt03//devlog/python/2024-11-24-python-container-101-pt02"}},"staticQueryHashes":["251939775","357378587","401334301"]}