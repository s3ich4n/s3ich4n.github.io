{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/devlog/terraform/2022-12-12-cloudneta-terraform-101-pt08","result":{"data":{"markdownRemark":{"id":"72052a8d-ed7f-5b3b-b9c7-5097181371f9","html":"<p>이 내용은 <a href=\"https://www.notion.so/gasidaseo/CloudNet-Blog-c9dfa44a27ff431dafdd2edacc8a1863\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CloudNet@</a> 에서 진행하는 테라폼 기초 입문 스터디에 대한 연재글입니다.</p>\n<p>스터디에서 사용하는 교재는 <a href=\"http://www.yes24.com/Product/Goods/101511312\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Terraform Up &#x26; Running 2nd Edition</a> 입니다.</p>\n<h1 id=\"prerequisites\" style=\"position:relative;\"><a href=\"#prerequisites\" aria-label=\"prerequisites permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prerequisites</h1>\n<ul>\n<li>아무래도 기존 내용을 모두 학습해야 하겠죠.</li>\n<li><a href=\"http://www.yes24.com/Product/Goods/11681152\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">클린 코드</a>를 읽고 오시면 더욱 좋습니다.</li>\n</ul>\n<h1 id=\"본문\" style=\"position:relative;\"><a href=\"#%EB%B3%B8%EB%AC%B8\" aria-label=\"본문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>본문</h1>\n<h2 id=\"프로덕션-레벨의-인프라-by-production-grade-infrastructure\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EB%8D%95%EC%85%98-%EB%A0%88%EB%B2%A8%EC%9D%98-%EC%9D%B8%ED%94%84%EB%9D%BC-by-production-grade-infrastructure\" aria-label=\"프로덕션 레벨의 인프라 by production grade infrastructure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로덕션 레벨의 인프라 (By production-grade Infrastructure)</h2>\n<p>저자의 프로덕션 레벨의 인프라 정의는 아래 요소들이 모두 잘 갖추어져있고, 이중화/장애대응까지 완벽히 되어있음을 말합니다:</p>\n<ul>\n<li>서버</li>\n<li>데이터 저장소</li>\n<li>로드 밸런서</li>\n<li>보안 기능</li>\n<li>모니터링/경고 도구</li>\n<li>파이프라인 구축</li>\n<li>비즈니스 운영에 필요한 기타 모든 도구</li>\n</ul>\n<p>아울러, 저자는 프로덕션 수준의 인프라를 만드는 프로젝트에 소요되는 대략적인 시간을 아래 정도가 걸린다고 산정하였습니다.</p>\n<table>\n<thead>\n<tr>\n<th>인프라 유형</th>\n<th>예</th>\n<th>예상 소요 시간</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>관리형 서비스 Managed service</td>\n<td>Amazon RDS</td>\n<td>1~2주</td>\n</tr>\n<tr>\n<td>스스로 관리하는 분산 시스템 (상태 비저장) Self-managed distributed system (stateless)</td>\n<td>Node.js 앱이 실행되는 ASG 클러스터</td>\n<td>2~4</td>\n</tr>\n<tr>\n<td>스스로 관리하는 분산 시스템 (상태 저장) Self-managed distributed system (stateful)</td>\n<td>Amazon Elasticsearch cluster</td>\n<td>2~4개월</td>\n</tr>\n<tr>\n<td>전체 아키텍처 Entire architecture</td>\n<td>애플리케이션, 데이터 저장소, 로드 밸런서, 모니터링 등</td>\n<td>6~36개월</td>\n</tr>\n</tbody>\n</table>\n<p>저는 아직 프로덕션 경험이 없지만, 개인적으로 만들고싶은 서비스를 구축한다면 관리형 서비스 ~ self managed 분산 시스템(stateless) 까지는 헤메면서 2주는 쓸 것 같습니다. 전체 아키텍처를 모두 구성하는데 길면 3년이 걸린다고 하니, 역시나 쉬운길은 아니네요. 그런데, 왜 이렇게 오래 걸리는걸까요?</p>\n<h2 id=\"프로덕션-수준의-인프라-구축에-시간이-오래-걸리는-이유\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EB%8D%95%EC%85%98-%EC%88%98%EC%A4%80%EC%9D%98-%EC%9D%B8%ED%94%84%EB%9D%BC-%EA%B5%AC%EC%B6%95%EC%97%90-%EC%8B%9C%EA%B0%84%EC%9D%B4-%EC%98%A4%EB%9E%98-%EA%B1%B8%EB%A6%AC%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"프로덕션 수준의 인프라 구축에 시간이 오래 걸리는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로덕션 수준의 인프라 구축에 시간이 오래 걸리는 이유</h2>\n<p>DevOps 프로젝트는 다른 유형의 소프트웨어 프로젝트보다 더 시간이 소요될 수 있습니다. 아래에서 이야기되는 사항들이 그 이유입니다.</p>\n<h3 id=\"호프스태터의-법칙hofstadters-law\" style=\"position:relative;\"><a href=\"#%ED%98%B8%ED%94%84%EC%8A%A4%ED%83%9C%ED%84%B0%EC%9D%98-%EB%B2%95%EC%B9%99hofstadters-law\" aria-label=\"호프스태터의 법칙hofstadters law permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>호프스태터의 법칙(Hofstadter’s Law)</h3>\n<p>호프스태터의 법칙은 일을 마치는데 더 오랜 시간이 걸리는 현상을 의미합니다. 일정보다 늦어질 것을 미리 예상했다 하더라도 여전히 일정보다 늦어진다는 것이죠. 아래와 같은 말로 언급되는 경우가 많습니다.</p>\n<blockquote>\n<p>호프스태터의 법칙: 일은 항상 예상시간 보다 더 오래 걸린다. 호프스태터의 법칙을 고려했다고 하더라도…</p>\n<p>Hofstadter’s Law: It always takes longer than you expect, even when you take into account Hofstadter’s Law.</p>\n</blockquote>\n<h3 id=\"데브옵스-산업은-초창기\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EB%B8%8C%EC%98%B5%EC%8A%A4-%EC%82%B0%EC%97%85%EC%9D%80-%EC%B4%88%EC%B0%BD%EA%B8%B0\" aria-label=\"데브옵스 산업은 초창기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데브옵스 산업은 초창기</h3>\n<p>저자는 이를 “아직 석기시대에 있다”(…the industry is still in its infancy) 라고 표하였습니다. 클라우드 컴퓨팅, IaC, DevOps, 컨테이너 기술의 출현과 발전속도가 매우 빠르고 성숙하는 단계에 있다고 하였기 떄문입니다.</p>\n<h3 id=\"데브옵스는-야크-털깎기-현상에-취약\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EB%B8%8C%EC%98%B5%EC%8A%A4%EB%8A%94-%EC%95%BC%ED%81%AC-%ED%84%B8%EA%B9%8E%EA%B8%B0-%ED%98%84%EC%83%81%EC%97%90-%EC%B7%A8%EC%95%BD\" aria-label=\"데브옵스는 야크 털깎기 현상에 취약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데브옵스는 “야크 털깎기” 현상에 취약</h3>\n<p>야크 털깎기는 목적을 이루기 위해 본래 목적과 전혀 상관없어 보이는 일들을 계속 해오고, 종국에는 그것을 이루는 행동을 말합니다.</p>\n<p>극단적인 예시를 하나 보시죠. <a href=\"https://scholar.google.com/citations?user=t0yrrzQAAAAJ\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">도널드 커누스</a>처럼 업계 부동의 원탑인 사람이라면, 책 쓰다가 디지털 조판 시스템이 답답해서 TeX를 <em>자신이 직접 만든</em> 프로그래밍 언어로 완성함과 동시에 폰트도 만들고, 폰트의 그래픽스를 정의하기 위한 언어도 만들고, 장치종속을 풀기위해 포맷까지 만들었다고 하지요. (책을 쓰는데 10년이 걸렸다고 합니다. 그 책은 다름아닌 <a href=\"https://www-cs-faculty.stanford.edu/~knuth/taocp.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TAOCP</a> 입니다.)</p>\n<p>누구나 그럴 수는 없음을 압니다. 그리고 회사는 정해진 기한과 목표물이 있지요. 저는 이를 <em>삽질</em> 이라고 배웠습니다. 독자 여러분들도 생각해보면 ‘이런 개념이 이렇게 불리는구나’ 하셨을 것이란 생각이 드네요.</p>\n<p>앞서말했듯, 업계가 아직 태동기에 있으니 더더욱 그럴 수 밖에 없으리라는 것이 저자의 의견입니다.</p>\n<h3 id=\"수행해야하는-체크리스트가-매우-많음\" style=\"position:relative;\"><a href=\"#%EC%88%98%ED%96%89%ED%95%B4%EC%95%BC%ED%95%98%EB%8A%94-%EC%B2%B4%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%8A%B8%EA%B0%80-%EB%A7%A4%EC%9A%B0-%EB%A7%8E%EC%9D%8C\" aria-label=\"수행해야하는 체크리스트가 매우 많음 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>수행해야하는 체크리스트가 매우 많음</h3>\n<p>대다수 개발자가 체크 리스트에 있는 대부분의 항목을 알지 못하기 때문에, 프로젝트를 평가할 때 중요하고 시간이 많이 걸리는 세부 사항을 잊어버립니다. 체크리스트는 아래와 같습니다:</p>\n<table>\n<thead>\n<tr>\n<th>작업</th>\n<th>설명</th>\n<th>사용가능 도구</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>설치<br />(Install)</td>\n<td>소프트웨어 바이너리, 필요 종속성 설치</td>\n<td>Bash, Chef, Ansible, Puppet</td>\n</tr>\n<tr>\n<td>설정<br />(Configure)</td>\n<td>포트 설정, TLS 인증서, 서비스 디스커버리, 리더/팔로워 복제 등의 소프트웨어 설정</td>\n<td>Bash, Chef, Ansible, Puppet</td>\n</tr>\n<tr>\n<td>프로비전<br />(Provision)</td>\n<td>서버, 로드 밸런서, 네트워크, 방화벽, IAM 권한 설정 등의 인프라 제공</td>\n<td>Terraform, CloudFormation</td>\n</tr>\n<tr>\n<td>배포<br />(Deploy)</td>\n<td>인프라 상위의 서비스 배포<br />중단시간 없이 업데이트 롤아웃<br />블루-그린, 카나리 배포 등</td>\n<td>Terraform, CloudFormation, k8s, ECS</td>\n</tr>\n<tr>\n<td>고가용성<br />(High Availability)</td>\n<td>프로세스, 서버, 서비스, 데이터 센터, 리전 등의 장애에 대비</td>\n<td>멀티 데이터센터, 멀티 리전, 복제, 오토스케일링, 로드밸런싱</td>\n</tr>\n<tr>\n<td>확장성<br />(Scailability)</td>\n<td>요청량에 따른 스케일 업/아웃<br />수평적 확장(더 많은 서버), 수직적 확장(더 큰 용량)</td>\n<td>오토스케일링, 복제, 샤딩, 캐싱, 분할정복</td>\n</tr>\n<tr>\n<td>성능<br />(Performance)</td>\n<td>CPU, 메모리, 디스크, 네트워크, GPU 용량 최적화<br />쿼리 튜닝, 벤치마킹, 테스트, 프로파일링</td>\n<td>Dynatrace, valgrind, VisualVM, ab, JMeter</td>\n</tr>\n<tr>\n<td>네트워킹<br />(Networking)</td>\n<td>정적·동적 IP 설정, 포트, 서비스 디스커버리, 방화벽, DNS, SSH 접속, VPN 연결</td>\n<td>VPC, 방화벽, 라우터, DNS Registers, OpenVPN</td>\n</tr>\n<tr>\n<td>보안<br />(Security)</td>\n<td>TLS를 통한 통신 중 데이터 암호화, 디스크 암호화, 인증, 인가, 보안 관리, 서버 하드닝</td>\n<td>ACM, Let’s Encrypt, KMS, Cognito, Vault, CIS</td>\n</tr>\n<tr>\n<td>성능지표<br />(Metrics)</td>\n<td>가용성, 비즈니스, 애플리케이션, 서버, 이벤트, 추적, 알람에 대한 메트릭</td>\n<td>CloudWatch, Datadog, New Relic, Honeycomb</td>\n</tr>\n<tr>\n<td>로그<br />(Logs)</td>\n<td>로그 순환, 중앙으로 데이터 수집</td>\n<td>CloudWatch Logs, ELK, Sumo Logic, Papertrail</td>\n</tr>\n<tr>\n<td>백업 및 복구<br />(Backup and Restore)</td>\n<td>DB, 캐시, 기타 데이터를 일정에 따라 백업<br />리전 별, 계정 별 복제</td>\n<td>RDS, ElastiCache, 복제</td>\n</tr>\n<tr>\n<td>비용 최적화<br />(Cost Optimization)</td>\n<td>적절한 인스턴스 유형 선택, 스팟 혹은 예약 인스턴스 사용, 오토스케일링, 사용하지 않는 리소스 정리</td>\n<td>오토스케일링, 스팟 인스턴스, 예약 인스턴스</td>\n</tr>\n<tr>\n<td>문서화<br />(Documentation)</td>\n<td>코드, 아키텍처, 모든 내용을 문서화<br />장애 대응 내용 정리(Postmortem)</td>\n<td>README, 각종 위키, Slack</td>\n</tr>\n<tr>\n<td>테스트<br />(Tests)</td>\n<td>인프라 코드를 테스트 자동화<br />항상 테스트 후 배포</td>\n<td>Terratest, inspec, serverspec, kitchen-terraform</td>\n</tr>\n</tbody>\n</table>\n<p>와 세상에 이렇게나 많습니다! 그런데…</p>\n<ul>\n<li>서버나 로드밸런서가 다운된다면 어떻게 될까요? 데이터 센터에 문제가 생긴다면 어떻게 될까요?</li>\n<li>VPC를 위시로 한 네트워킹 작업 또한 정말 어렵습니다. 그뿐일까요, VPN, Service Discovery, SSH Access 등 정말 많습니다!</li>\n<li>그렇지만, 프로젝트 계획 및 시간 예측에서 배제되는 경우가 많습니다.</li>\n</ul>\n<p>즉, 이러한 연유로 인해 프로젝트 계획 및 시간 예측이 너무나 어렵습니다.</p>\n<h2 id=\"프로덕션-수준의-인프라-모듈\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EB%8D%95%EC%85%98-%EC%88%98%EC%A4%80%EC%9D%98-%EC%9D%B8%ED%94%84%EB%9D%BC-%EB%AA%A8%EB%93%88\" aria-label=\"프로덕션 수준의 인프라 모듈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로덕션 수준의 인프라 모듈</h2>\n<p>그렇다면 프로덕션 레벨의 테라폼 코드는 어떤 것들이 필요한지 살펴보겠습니다. 테라폼 코드는 <strong>재사용 가능한 모듈</strong> 단위로 작성하는 것이 좋습니다. 이에 대한 모범사례를 살펴봅시다. 다룰 주제는 아래와 같습니다.</p>\n<h3 id=\"소형-모듈을-써야하는-이유\" style=\"position:relative;\"><a href=\"#%EC%86%8C%ED%98%95-%EB%AA%A8%EB%93%88%EC%9D%84-%EC%8D%A8%EC%95%BC%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"소형 모듈을 써야하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소형 모듈을 써야하는 이유</h3>\n<p>3장에서 학습했던 상태 파일 격리에서 알아본 것과 같이, 모든 인프라 환경은 단일파일, 단일 모듈로 정의해서는 좋지 않은 수준이 아니라 <strong>유해</strong> 한 것으로 간주합니다. 아래의 이유로 인해 그렇습니다.</p>\n<h4 id=\"대형모듈을-썼을-떄의-문제점\" style=\"position:relative;\"><a href=\"#%EB%8C%80%ED%98%95%EB%AA%A8%EB%93%88%EC%9D%84-%EC%8D%BC%EC%9D%84-%EB%96%84%EC%9D%98-%EB%AC%B8%EC%A0%9C%EC%A0%90\" aria-label=\"대형모듈을 썼을 떄의 문제점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>대형모듈을 썼을 떄의 문제점</h4>\n<ul>\n<li>속도가 느림(slow): 모든 인프라가 하나의 모듈에 정의되어 있으면 명령 실행 시 오래 걸립니다. <code class=\"language-text\">terraform plan</code> 구동 시 20분 걸리기도 합니다.</li>\n<li>안전하지 않음(insecure): 모든 인프라가 하나의 모듈에 정의되어 있으면, 어떤 것을 변경 시 모든 액세스 권한을 사용하게 됩니다.\n<ul>\n<li>따라서 모든 사용자에게 관리자 권한을 부여하게 되지요.</li>\n<li>이는 최소 권한 원칙(principle of least privilege) 에 위배됩니다.</li>\n</ul>\n</li>\n<li>위험성이 높음(risky): 예를 들어 스테이징 환경에서 프런트엔드 앱을 변경 시 오타나 잘못된 명령으로 프로덕션 데이터베이스를 삭제하는 대참사가 발생할 수 있습니다…</li>\n<li>이해하기 어려움(understand) : 한 곳에 코드가 많을수록 한 사람이 모든 것을 이해하기가 더 어려워집니다.</li>\n<li>리뷰하기 어려움(review) : 수집 줄의 코드로 구성된 모듈을 리뷰하는 것은 쉽지만, 수천 줄의 코드로 구성된 모듈을 리뷰하는 것은 거의 불가능입니다.\n<ul>\n<li><code class=\"language-text\">terraform plan</code> 실행 시 오래 거리고, plan 명령의 출력이 수천 줄이며 아무도 코드를 읽으려 하지 않을겁니다.</li>\n<li>예를들어, 이 경우 데이터베이스가 삭제될 것임을 나타내는 빨간색 코드가 있더라도 누구 하나 발견하지 못할 수도 있습니다.</li>\n</ul>\n</li>\n<li>테스트하기 어려움(test) : 인프라 코드 테스트하기 매우 힘들어집니다! 다음 장에서 살펴보도록 하겠습니다.</li>\n</ul>\n<p>따라서, 이런 이유로 인해 소형 모듈을 사용하는 편이 보다 좋은 코드가 되겠습니다.</p>\n<h4 id=\"소형-모듈을-사용하는-방안\" style=\"position:relative;\"><a href=\"#%EC%86%8C%ED%98%95-%EB%AA%A8%EB%93%88%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EB%B0%A9%EC%95%88\" aria-label=\"소형 모듈을 사용하는 방안 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소형 모듈을 사용하는 방안</h4>\n<p>소형 모듈로 내용을 줄여보기 전에 클린코드에 나오는 격언 중 하나를 소개하면 좋은 대목인 것 같군요.</p>\n<blockquote>\n<ol>\n<li>\n<p>함수의 첫 번째 규칙은 작아야한다는 것.</p>\n</li>\n<li>\n<p>함수의 두 번째 규칙은, 그보다 더 작아야한다는 것.</p>\n</li>\n</ol>\n</blockquote>\n<p>예시로 한번 살펴보겠습니다.</p>\n<p>이런 아키텍처의 코드가 단 한줄뿐이라면… 그것은 코드 스멜입니다! 코드 스멜은 더 큰 문제를 일으키기 쉬운 코드지요. 저는 냄새나는 코드라고 부릅니다.</p>\n<p>기존 예시라면, 지난 7장에서 살펴본 ASG, ALB, 헬로월드 앱을 각각의 소형 모듈로 나누어봅시다.</p>\n<p><img src=\"./media/01_examples-of-complicated-aws-architecture.jpg\" alt=\"examples-of-complicated-aws-architecture\"></p>\n<h3 id=\"합성-가능한-모듈\" style=\"position:relative;\"><a href=\"#%ED%95%A9%EC%84%B1-%EA%B0%80%EB%8A%A5%ED%95%9C-%EB%AA%A8%EB%93%88\" aria-label=\"합성 가능한 모듈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>합성 가능한 모듈</h3>\n<p>여기서부턴 코드확인이 필요합니다. <code class=\"language-text\">chapter08</code> 디렉토리를 확인해주세요. 경로는 <a href=\"https://github.com/s3ich4n/terraform-study-101/tree/main/chapter08\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">여기</a> 입니다. 베이스코드는 7장에서 작성한 코드입니다.</p>\n<p><strong>재사용 가능하고 합성 가능한 모듈</strong></p>\n<ul>\n<li><strong>외부에서 상태를 읽는 대신 입력 매개 변수를 통해 전달하고, 외부에 상태를 쓰는 대신 출력 매개 변수를 통해 계산 결과를 반환합니다.</strong></li>\n<li>모든 것을 입력 변수를 통해 전달하고 모든 것을 출력 변수를 통해 반환하며 간단한 모듈들을 결합해 더 복잡한 모듈을 만들수 있다.</li>\n<li>실제 사용 시에는 더 나은 합성과 재사용을 위해 아래 실습 내용 보다 모듈을 더욱 세분화해야 할 수도 있습니다.</li>\n</ul>\n<p>그러면, 코드 리팩토링을 진행해볼까요.</p>\n<ol>\n<li>기존 <code class=\"language-text\">webserver-cluster</code>는 하드코딩 되어있었고, 이를 아래와 같이 재작성합니다.\n<ol>\n<li>variables 별도 분리를 통한 서브넷, 타겟 그룹명, 헬스체크 타입, <code class=\"language-text\">user_data</code> 변경 가능하도록 수정\n<ol>\n<li>유연한 변경이 가능하도록 작성</li>\n<li>기본 서브넷이 아니라, 개별 VPC, 서브넷으로 사용가능</li>\n<li>타겟 그룹명, 헬스체크 타입 변수로 ASG를 로드 밸런서와 통합</li>\n</ol>\n</li>\n<li>출력변수 추가\n<ol>\n<li>output 변수를 통해</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"테스트-가능한-모듈\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B0%80%EB%8A%A5%ED%95%9C-%EB%AA%A8%EB%93%88\" aria-label=\"테스트 가능한 모듈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트 가능한 모듈</h3>\n<p>수정한 코드를 직접 구동해봅시다.</p>\n<ol>\n<li><code class=\"language-text\">asg-rolling-deploy</code> 모듈을 사용하여, 크기 1인 ASG를 배포하는 코드를 봅시다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">required_version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\">= 1.0.0, &lt; 2.0.0\"</span>\n\n  <span class=\"token keyword\">required_providers</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">aws</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">source</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"hashicorp/aws\"</span>\n      <span class=\"token property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"~> 4.0\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">region</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-east-2\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># 모듈을 사용하여, 상기 리팩토링을 통해 수정한 내용을 쉽게 배포할 수 있게 되었습니다!</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># 개인적으로는, 모듈 직전의 코드를 직접 쳐봐야 모듈화를 할 수 있는 통찰이 생기고,</span>\n<span class=\"token comment\"># 이를 통해 프로비저닝 및 배포를 테라폼으로 할 수 있다고 생각합니다.</span>\n<span class=\"token keyword\">module<span class=\"token type variable\"> \"asg\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">source</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"../../modules/cluster/asg-rolling-deploy\"</span>\n\n  <span class=\"token property\">cluster_name</span>  <span class=\"token punctuation\">=</span> var.cluster_name\n\n  <span class=\"token property\">ami</span>           <span class=\"token punctuation\">=</span> data.aws_ami.ubuntu.id\n  <span class=\"token property\">instance_type</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"t2.micro\"</span>\n\n  <span class=\"token property\">min_size</span>           <span class=\"token punctuation\">=</span> <span class=\"token number\">1</span>\n  <span class=\"token property\">max_size</span>           <span class=\"token punctuation\">=</span> <span class=\"token number\">1</span>\n  <span class=\"token property\">enable_autoscaling</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">false</span>\n\n  <span class=\"token property\">subnet_ids</span>        <span class=\"token punctuation\">=</span> data.aws_subnets.default.ids\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">data <span class=\"token type variable\">\"aws_vpc\"</span></span> <span class=\"token string\">\"default\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">data <span class=\"token type variable\">\"aws_subnets\"</span></span> <span class=\"token string\">\"default\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">filter</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>   <span class=\"token punctuation\">=</span> <span class=\"token string\">\"vpc-id\"</span>\n    <span class=\"token property\">values</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>data.aws_vpc.default.id<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">data <span class=\"token type variable\">\"aws_ami\"</span></span> <span class=\"token string\">\"ubuntu\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">most_recent</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token property\">owners</span>      <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"099720109477\"</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># Canonical</span>\n\n  <span class=\"token keyword\">filter</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>   <span class=\"token punctuation\">=</span> <span class=\"token string\">\"name\"</span>\n    <span class=\"token property\">values</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>배포 및 확인은 아래 코드로 진행하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># [터미널1] RDS 생성 모니터링</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> aws rds describe-db-instances <span class=\"token parameter variable\">--query</span> <span class=\"token string\">\"*[].[Endpoint.Address,Endpoint.Port,MasterUsername]\"</span> <span class=\"token parameter variable\">--output</span> text  <span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"------------------------------\"</span> <span class=\"token punctuation\">;</span> <span class=\"token function\">sleep</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span>\n\n<span class=\"token comment\"># RDS 배포</span>\n<span class=\"token builtin class-name\">cd</span> chapter08/examples01/small-modules/examples/mysql\n\n<span class=\"token comment\"># 환경변수에 지정</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">TF_VAR_db_username</span><span class=\"token operator\">=</span><span class=\"token string\">'cloudneta'</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">TF_VAR_db_password</span><span class=\"token operator\">=</span><span class=\"token string\">'cloudnetaQ!'</span>\n\nterraform init <span class=\"token operator\">&amp;&amp;</span> terraform plan\nterraform apply -auto-approve\n\n<span class=\"token comment\"># [터미널2]</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> aws ec2 describe-instances <span class=\"token parameter variable\">--query</span> <span class=\"token string\">\"Reservations[*].Instances[*].{PublicIPAdd:PublicIpAddress,InstanceName:Tags[?Key=='Name']|[0].Value,Status:State.Name}\"</span> <span class=\"token parameter variable\">--filters</span> <span class=\"token assign-left variable\">Name</span><span class=\"token operator\">=</span>instance-state-name,Values<span class=\"token operator\">=</span>running <span class=\"token parameter variable\">--output</span> text <span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"------------------------------\"</span> <span class=\"token punctuation\">;</span> <span class=\"token function\">sleep</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span>\n\n<span class=\"token comment\"># 배포</span>\n<span class=\"token builtin class-name\">cd</span> chapter08/examples01/small-modules/examples/asg\nterraform init\nterraform plan\nterraform apply -auto-approve\n\n<span class=\"token comment\"># ALB 배포</span>\n<span class=\"token builtin class-name\">cd</span> chapter08/examples01/small-modules/examples/alb\nterraform init <span class=\"token operator\">&amp;&amp;</span> terraform plan\nterraform apply -auto-approve\n\n<span class=\"token comment\"># ALB DNS주소로 curl 접속 확인</span>\n<span class=\"token assign-left variable\">ALBDNS</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>terraform output <span class=\"token parameter variable\">-raw</span> alb_dns_name<span class=\"token variable\">)</span></span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token function\">curl</span> --connect-timeout <span class=\"token number\">1</span>  http://<span class=\"token variable\">$ALBDNS</span> <span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">echo</span><span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"------------------------------\"</span><span class=\"token punctuation\">;</span> <span class=\"token function\">date</span><span class=\"token punctuation\">;</span> <span class=\"token function\">sleep</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> http://<span class=\"token variable\">$ALBDNS</span></code></pre></div>\n<h3 id=\"릴리즈-가능한-모듈버저닝\" style=\"position:relative;\"><a href=\"#%EB%A6%B4%EB%A6%AC%EC%A6%88-%EA%B0%80%EB%8A%A5%ED%95%9C-%EB%AA%A8%EB%93%88%EB%B2%84%EC%A0%80%EB%8B%9D\" aria-label=\"릴리즈 가능한 모듈버저닝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>릴리즈 가능한 모듈(버저닝)</h3>\n<h4 id=\"validations\" style=\"position:relative;\"><a href=\"#validations\" aria-label=\"validations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Validations</h4>\n<p>테라폼 0.13부터 등장한 validation blocks 은 입력 변수를 체크할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> \"instance_type\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"The type of EC2 Instances to run (e.g. t2.micro)\"</span>\n  <span class=\"token property\">type</span>        <span class=\"token punctuation\">=</span> string\n\n  <span class=\"token comment\"># t2.micro 혹은 t3.micro만 사용할 수 있도록 체크하는 로직입니다!</span>\n  <span class=\"token keyword\">validation</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">condition</span>     <span class=\"token punctuation\">=</span> contains(<span class=\"token punctuation\">[</span><span class=\"token string\">\"t2.micro\"</span>, <span class=\"token string\">\"t3.micro\"</span><span class=\"token punctuation\">]</span>, var.instance_type)\n    <span class=\"token property\">error_message</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Only free tier is allowed: t2.micro | t3.micro.\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>만일 validation에 실패한다면, 아래와 같은 에러 메시지를 리턴하게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre class=\"language-hcl\"><code class=\"language-hcl\">$ terraform apply -var <span class=\"token property\">instance_type</span><span class=\"token punctuation\">=</span><span class=\"token string\">\"m4.large\"</span>\n│ Error: Invalid value for variable\n│\n│   on main.tf line <span class=\"token number\">17</span>:\n│    <span class=\"token number\">1</span>: <span class=\"token keyword\">variable<span class=\"token type variable\"> \"instance_type\" </span></span><span class=\"token punctuation\">{</span>\n│     ├────────────────\n│     │ var.instance_type is <span class=\"token string\">\"m4.large\"</span>\n│\n│ Only free tier is allowed: t2.micro | t3.micro.\n│\n│ This was checked by the validation rule at main.tf:<span class=\"token number\">21</span>,<span class=\"token number\">3</span>-<span class=\"token number\">13.</span></code></pre></div>\n<h4 id=\"versioned-modules\" style=\"position:relative;\"><a href=\"#versioned-modules\" aria-label=\"versioned modules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Versioned Modules</h4>\n<p>인프라 코드는 오늘 실행하든 3년후에 실행하든 동일한 결과를 얻을 수 있어야 합니다. 테라폼 코어, 프로바이더 및 버전을 명시하여 이를 가능하게 합니다.</p>\n<ul>\n<li>\n<p>모듈 버저닝</p>\n<ul>\n<li>테라폼 코어(<code class=\"language-text\">core</code>를 의미): 테라폼 실행파일 버전을 <code class=\"language-text\">required_version</code> 이란 값으로 명시합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># Require any 1.x version of Terraform</span>\n  <span class=\"token property\">required_version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\">= 1.0.0, &lt; 2.0.0\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># 프로덕션은 완전히 구체적인 버전을 지칭하는 것이 좋습니다.</span>\n<span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># Require any 1.x version of Terraform</span>\n  <span class=\"token property\">required_version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"1.2.3\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>프로바이더 버전: 프로바이더 버전 또한 <code class=\"language-text\">require_providers</code> 블록으로 명시합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">required_version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\">= 1.0.0, &lt; 2.0.0\"</span>\n\n  <span class=\"token keyword\">required_providers</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">aws</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">source</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"hashicorp/aws\"</span>\n      <span class=\"token property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"~> 4.0\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>모듈 버전: 모듈 자체의 버전 명시를 의미합니다. 이는 테라폼 코드일테니 Semantic version 관리 및 Git의 <code class=\"language-text\">tag</code>를 사용하는 방법이 있겠습니다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"테라폼-모듈-그-외의-것들은-추가예정\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EB%9D%BC%ED%8F%BC-%EB%AA%A8%EB%93%88-%EA%B7%B8-%EC%99%B8%EC%9D%98-%EA%B2%83%EB%93%A4%EC%9D%80-%EC%B6%94%EA%B0%80%EC%98%88%EC%A0%95\" aria-label=\"테라폼 모듈 그 외의 것들은 추가예정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테라폼 모듈 그 외의 것들은? (추가예정)</h3>\n<p>아래 사항들이 있습니다:</p>\n<ul>\n<li>Provisioners</li>\n<li>Provisioners with null_resource</li>\n<li>External data source</li>\n</ul>\n<h1 id=\"lessons-learned\" style=\"position:relative;\"><a href=\"#lessons-learned\" aria-label=\"lessons learned permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lessons Learned</h1>\n<p>제 8장에서는 아래의 내용을 반드시 기억하셨으면 좋겠습니다.</p>\n<ol>\n<li>DevOps 파트 또한 깊고 어렵고, “삽질”이 많습니다. 쉽지 않은 파트이며 항상 감사히 생각해야겠습니다.</li>\n<li>프로덕션 레벨에서 성공적으로 구동하기 까지는 정말 어렵고 힘든 길임을 이해했습니다.</li>\n<li>테라폼 코드를 프로덕션 레벨에서 사용하는 예시를 통해 <strong>재사용 가능한 모듈</strong> 단위의 사용을 학습했습니다.\n<ol>\n<li>작고, 테스트 가능하고 합성 가능한 모듈을 작성해야 합니다.</li>\n<li>버전을 명시화하여 언제든 동일한 결과를 얻을 수 있어야 합니다.</li>\n</ol>\n</li>\n</ol>\n<p>이것으로 제 8장을 마칩니다. 긴 글 읽어주셔서 감사합니다.</p>","fields":{"slug":"/devlog/terraform/2022-12-12---cloudneta-terraform-101-pt08//devlog/terraform/2022-12-12-cloudneta-terraform-101-pt08","tagSlugs":["/tag/terraform/","/tag/iac/","/tag/devops/"]},"frontmatter":{"date":"2022-12-12T04:43:39.000Z","description":"Terraform을 프로덕션 레벨 정도로 사용하려면 어느정도는 할 수 있어야하고, 어떤걸 살펴봐야 할까요? 이 포스팅에서는 그 부분을 공부해보았습니다.","tags":["terraform","iac","devops"],"title":"[CloudNet@] 테라폼 스터디 8주차 - 프로덕션 수준의 테라폼 코드","socialImage":{"publicURL":{"publicURL":"/static/87dffd59448a30f82a571f9cd59a7a82/terraform08.jpg"}}}}},"pageContext":{"slug":"/devlog/terraform/2022-12-12---cloudneta-terraform-101-pt08//devlog/terraform/2022-12-12-cloudneta-terraform-101-pt08"}},"staticQueryHashes":["251939775","357378587","401334301"]}