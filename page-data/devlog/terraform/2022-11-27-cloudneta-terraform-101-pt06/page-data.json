{"componentChunkName":"component---src-templates-post-template-post-template-tsx","path":"/devlog/terraform/2022-11-27-cloudneta-terraform-101-pt06","result":{"data":{"markdownRemark":{"id":"c547c26b-6d06-5984-a23a-379152306b70","html":"<p>이 내용은 <a href=\"https://www.notion.so/gasidaseo/CloudNet-Blog-c9dfa44a27ff431dafdd2edacc8a1863\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CloudNet@</a> 에서 진행하는 테라폼 기초 입문 스터디에 대한 연재글입니다.</p>\n<p>스터디에서 사용하는 교재는 <a href=\"http://www.yes24.com/Product/Goods/101511312\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Terraform Up &#x26; Running 2nd Edition</a> 입니다.</p>\n<p>특히 이 장은, <a href=\"https://www.oreilly.com/library/view/terraform-up-and/9781098116736/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Terraform Up &#x26; Running 3rd Edition</a> 의 Managing Secrets with Terraform 장을 참고하여 학습하였습니다.</p>\n<h1 id=\"prerequisites\" style=\"position:relative;\"><a href=\"#prerequisites\" aria-label=\"prerequisites permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prerequisites</h1>\n<p>따로 있지 않습니다!</p>\n<p>아래에서 6주차 스터디 내용을 공유합니다.</p>\n<p>Terraform Up &#x26; Learning 3rd Edition 의 6장 내용을 다루고 있습니다.</p>\n<h1 id=\"본문\" style=\"position:relative;\"><a href=\"#%EB%B3%B8%EB%AC%B8\" aria-label=\"본문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>본문</h1>\n<p>비밀번호를 누구든 알 수 없게 하면 안 된다는 것은 상식이지만, 방법을 모르면 사실상 비밀번호를 노출시키는 것과 다름 없기 때문에, 이를 관리하는 도구를 사용해야합니다. 이러한 이유로, 민감정보 값들은 프로비저닝 될 때 안전하게 관리 될 필요가 있습니다.</p>\n<p>민감정보는 아래 값들을 의미합니다:</p>\n<ul>\n<li>DB 암호</li>\n<li>API 키</li>\n<li>TLS 인증서</li>\n<li>SSH 키</li>\n<li>GPG 키</li>\n<li>등등..</li>\n</ul>\n<h2 id=\"암호-관리에-대하여\" style=\"position:relative;\"><a href=\"#%EC%95%94%ED%98%B8-%EA%B4%80%EB%A6%AC%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC\" aria-label=\"암호 관리에 대하여 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>암호 관리에 대하여</h2>\n<p>프로비저닝을 할 때 민감정보에 대한 절대적 법칙이 있습니다.</p>\n<blockquote>\n<ol>\n<li>민감 정보를 <strong>절대 평문으로</strong> 쓰지 맙시다.</li>\n<li>1번을 명심하십시오.</li>\n</ol>\n</blockquote>\n<p>예를들어 이런 코드가 있다고 할까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"hcl\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_db_instance\"</span></span> <span class=\"token string\">\"example\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">identifier_prefix</span>   <span class=\"token punctuation\">=</span> <span class=\"token string\">\"terraform-up-and-running\"</span>\n  <span class=\"token property\">engine</span>              <span class=\"token punctuation\">=</span> <span class=\"token string\">\"mysql\"</span>\n  <span class=\"token property\">allocated_storage</span>   <span class=\"token punctuation\">=</span> <span class=\"token number\">10</span>\n  <span class=\"token property\">instance_class</span>      <span class=\"token punctuation\">=</span> <span class=\"token string\">\"db.t2.micro\"</span>\n  <span class=\"token property\">skip_final_snapshot</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token property\">db_name</span>             <span class=\"token punctuation\">=</span> var.db_name\n\n  <span class=\"token comment\"># 절대로!!! 이러면!!! 안됩니다!!!!!!!!!!!!!!</span>\n  <span class=\"token property\">username</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"admin\"</span>\n  <span class=\"token property\">password</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"password\"</span>\n  <span class=\"token comment\"># 절대로!!! 이러면!!! 안됩니다!!!!!!!!!!!!!! 진짜로!!!!</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>VCS (E.g., Git)에 이런 코드가 있다면, <strong>누구든지</strong>간에 AWS에 프로비저닝된 MySQL에 접근할 수 있습니다!</p>\n<p>만일 이 코드를 누군가가 클론한다면, 다른 사람의 로컬에 ID/PW 정보가 저장될 수도 있겠죠. 그렇다면 ID/PW 에 대한 접근, 사용에 대한 통제 및 감사조차 할 수 없게 됩니다.</p>\n<p>암호 관리 도구는 바로 이런 <strong>치명적인</strong> 부분 때문에 필연적으로 사용해야 하는 것입니다.</p>\n<h2 id=\"암호-관리-도구에-대하여\" style=\"position:relative;\"><a href=\"#%EC%95%94%ED%98%B8-%EA%B4%80%EB%A6%AC-%EB%8F%84%EA%B5%AC%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC\" aria-label=\"암호 관리 도구에 대하여 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>암호 관리 도구에 대하여</h2>\n<p>그렇다면 암호 관리 도구에 대한 필요성을 이해했으니, 암호 관리 도구에 저장되는 값과 암호관리 도구의 저장방식 및 암호관리 도구에 대한 접근 방식에 대해 살펴봅시다.</p>\n<ol>\n<li>\n<p><code class=\"language-text\">The types of secrets you store</code> : 3가지 유형에 따라 관리 방식의 차이가 있습니다.</p>\n<ol>\n<li><code class=\"language-text\">Personal secrets</code>: 개인 소유 암호 (내 웹사이트 접근 암호, SSH 키, 등…)\n<ul>\n<li>이런 암호들은 개별 서비스들을 잘 쓰거나 하는 편이 좋겠지요(예시는 후술합니다!)</li>\n</ul>\n</li>\n<li><code class=\"language-text\">Customer secrets</code>: 고객 소유 암호 (고객의 개인정보, 고객의 이름/암호 등…)\n<ul>\n<li>이런 암호들은 해싱 알고리즘을 사용해야겠지요.</li>\n<li>Django 3.2 버전으로로 치자면, <a href=\"https://docs.djangoproject.com/en/3.2/topics/auth/passwords/#how-django-stores-passwords\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PBKDF2 SHA256으로 해시를 <code class=\"language-text\">260,000</code>번 취한 값을 암호로 쓰는 것</a> 처럼요(<a href=\"https://github.com/django/django/commit/f2187a227f7a3c80282658e699ae9b04023724e5\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">출처</a>).</li>\n</ul>\n</li>\n<li><code class=\"language-text\">Infrastructure secrets</code>: 인프라 관련 암호 (DB 암호, API 키값, 등…)\n<ol>\n<li>이런 암호들은 암/복호화 알고리즘을 사용하는 편이 좋겠지요.</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p><code class=\"language-text\">The way you store secrets</code> : 2가지 암호 저장 방식이 있습니다. 파일 기반 암호 저장이냐, 중앙 집중식 암호 저장이냐의 차이지요.</p>\n<ol>\n<li><code class=\"language-text\">File-based secret stores</code> (파일기반의 암호 저장)\n<ol>\n<li>민감 정보를 암호화 후 저장하기 때문에 암호화 관련 키 관리가 중요합니다.</li>\n<li>AWS KMS, GCP KMS 혹은 PGP Key를 이용하는 케이스가 있겠군요.</li>\n</ol>\n</li>\n<li><code class=\"language-text\">Centralized secret stores</code> (중앙화된 암호 저장)\n<ol>\n<li>일반적으로 데이터베이스(MySQL, Psql, DynamoDB 등)에 비밀번호를 암호화하여 저장합니다.</li>\n<li>암호화 키는 서비스 자체 혹은 클라우드 KMS(Key Management Service)를 사용합니다.</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p><code class=\"language-text\">The Interface you use to access secrets</code>: 암호관리 툴은 아래와 같이 사용할 수 있습니다.</p>\n<ol>\n<li><code class=\"language-text\">API</code></li>\n<li><code class=\"language-text\">CLI</code></li>\n<li><code class=\"language-text\">UI</code></li>\n</ol>\n</li>\n<li>\n<p><code class=\"language-text\">The Comparison of secret manegement tools</code></p>\n<ul>\n<li>\n<p>이러한 특성들을 가지고, 다양한 비밀번호 관리 도구를 살펴봅시다.</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Types of secrets</th>\n<th>Secret Storage</th>\n<th>Secret Interface</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HashiCorp Vault</td>\n<td>Infrastructure</td>\n<td>Centralized service</td>\n<td>UI, API, CLI</td>\n</tr>\n<tr>\n<td>AWS Secrets Manager</td>\n<td>Infrastructure</td>\n<td>Centralized service</td>\n<td>UI, API, CLI</td>\n</tr>\n<tr>\n<td>GCP Secrets Manager</td>\n<td>Infrastructure</td>\n<td>Centralized service</td>\n<td>UI, API, CLI</td>\n</tr>\n<tr>\n<td>Azure Key Vault</td>\n<td>Infrastructure</td>\n<td>Centralized service</td>\n<td>UI, API, CLI</td>\n</tr>\n<tr>\n<td>Confidant</td>\n<td>Infrastructure</td>\n<td>Centralized service</td>\n<td>UI, API, CLI</td>\n</tr>\n<tr>\n<td>Keywhiz</td>\n<td>Infrastructure</td>\n<td>Centralized service</td>\n<td>API, CLI</td>\n</tr>\n<tr>\n<td>sops</td>\n<td>Infrastructure</td>\n<td>Files</td>\n<td>CLI</td>\n</tr>\n<tr>\n<td>git-secret</td>\n<td>Infrastructure</td>\n<td>Files</td>\n<td>CLI</td>\n</tr>\n<tr>\n<td>1Password</td>\n<td>Personal</td>\n<td>Centralized service</td>\n<td>UI, API, CLI</td>\n</tr>\n<tr>\n<td>LastPass</td>\n<td>Personal</td>\n<td>Centralized service</td>\n<td>UI, API, CLI</td>\n</tr>\n<tr>\n<td>Bitwarden</td>\n<td>Personal</td>\n<td>Centralized service</td>\n<td>UI, API, CLI</td>\n</tr>\n<tr>\n<td>KeePass</td>\n<td>Personal</td>\n<td>Files</td>\n<td>UI, CLI</td>\n</tr>\n<tr>\n<td>Keychain (macOS)</td>\n<td>Personal</td>\n<td>Files</td>\n<td>UI, CLI</td>\n</tr>\n<tr>\n<td>Credential Manager (Windows)</td>\n<td>Personal</td>\n<td>Files</td>\n<td>UI, CLI</td>\n</tr>\n<tr>\n<td>pass</td>\n<td>Personal</td>\n<td>Files</td>\n<td>CLI</td>\n</tr>\n<tr>\n<td>Active Directory</td>\n<td>Customer</td>\n<td>Centralized service</td>\n<td>UI, API, CLI</td>\n</tr>\n<tr>\n<td>Auth0</td>\n<td>Customer</td>\n<td>Centralized service</td>\n<td>UI, API, CLI</td>\n</tr>\n<tr>\n<td>Okta</td>\n<td>Customer</td>\n<td>Centralized service</td>\n<td>UI, API, CLI</td>\n</tr>\n<tr>\n<td>OneLogin</td>\n<td>Customer</td>\n<td>Centralized service</td>\n<td>UI, API, CLI</td>\n</tr>\n<tr>\n<td>Ping</td>\n<td>Customer</td>\n<td>Centralized service</td>\n<td>UI, API, CLI</td>\n</tr>\n<tr>\n<td>AWS Cognito</td>\n<td>Customer</td>\n<td>Centralized service</td>\n<td>UI, API, CLI</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"secret-management-tools-w-terraform\" style=\"position:relative;\"><a href=\"#secret-management-tools-w-terraform\" aria-label=\"secret management tools w terraform permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Secret Management tools w/ Terraform</h2>\n<p>테라폼에서는 어느 시점에서 인증정보들이 노출될 수 있을까요? 바로 아래와 같은 지점에서 암호값이 노출될 수 있습니다.</p>\n<ol>\n<li>Provider 기재 시 노출 (E.g., 프로바이더 인증 정보 등)</li>\n<li>Resources and data sources 기재 시 노출(E.g., DB 암호 등)</li>\n<li>State file and plan files (상태 파일, 플랜 파일 자체에 민감정보가 노출)</li>\n</ol>\n<p>위의 리스트들에 대한 내용들을 아래에서 하나씩 살펴봅시다. 이 내용에 대한 에시코드는 <code class=\"language-text\">chapter06/exercises/01_providers</code> 에 있습니다. 링크는 <a href=\"\">여기</a>를 클릭해주세요.</p>\n<h3 id=\"provider-기재-시-암호값을-관리하는-방안\" style=\"position:relative;\"><a href=\"#provider-%EA%B8%B0%EC%9E%AC-%EC%8B%9C-%EC%95%94%ED%98%B8%EA%B0%92%EC%9D%84-%EA%B4%80%EB%A6%AC%ED%95%98%EB%8A%94-%EB%B0%A9%EC%95%88\" aria-label=\"provider 기재 시 암호값을 관리하는 방안 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Provider 기재 시 암호값을 관리하는 방안</h3>\n<h4 id=\"프로바이더에서-노출\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EB%B0%94%EC%9D%B4%EB%8D%94%EC%97%90%EC%84%9C-%EB%85%B8%EC%B6%9C\" aria-label=\"프로바이더에서 노출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로바이더에서 노출</h4>\n<p><code class=\"language-text\">provider</code> 선언 시 IAM 자격증명 정보를 노출하면 절대 안됩니다! 당장 인식할 수 있는 단점은 두가지입니다:</p>\n<ol>\n<li>자격증명 정보가 바로 노출됩니다!</li>\n<li>하나의 자격증명만 사용할 수 있습니다!</li>\n</ol>\n<h5 id=\"환경변수를-사용하면\" style=\"position:relative;\"><a href=\"#%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B4\" aria-label=\"환경변수를 사용하면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>환경변수를 사용하면?</h5>\n<ul>\n<li>장점\n<ul>\n<li>자격증명 정보를 노출하지는 않습니다</li>\n</ul>\n</li>\n<li>단점\n<ul>\n<li>여전히 PC에 평문으로 저장되어있습니다</li>\n<li>단독 자격증명만 사용할 수 있습니다.</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"유저의-민감정보-유출-방지-방법\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%EC%A0%80%EC%9D%98-%EB%AF%BC%EA%B0%90%EC%A0%95%EB%B3%B4-%EC%9C%A0%EC%B6%9C-%EB%B0%A9%EC%A7%80-%EB%B0%A9%EB%B2%95\" aria-label=\"유저의 민감정보 유출 방지 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유저의 민감정보 유출 방지 방법</h5>\n<p>여러 서비스들을 사용할 수 있습니다.</p>\n<ol>\n<li>1Password/LastPass 등의 서비스 구매 후 사용</li>\n<li>aws-vault 사용: <a href=\"https://github.com/99designs/aws-vault\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a> <a href=\"https://www.44bits.io/ko/post/securing-aws-credentials-with-aws-vault\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">44bits 소개글</a>을 참고바랍니다!</li>\n</ol>\n<p>사용 예시</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># mac 설치</span>\nbrew <span class=\"token function\">install</span> <span class=\"token parameter variable\">--cask</span> aws-vault\n\n<span class=\"token comment\"># 윈도우 설치</span>\nchoco <span class=\"token function\">install</span> aws-vault  <span class=\"token comment\"># 윈도우 Chocolatey</span>\nscoop <span class=\"token function\">install</span> aws-vault  <span class=\"token comment\"># 윈도우 Scoop</span>\n\n<span class=\"token comment\"># 버전 확인</span>\naws-vault <span class=\"token parameter variable\">--version</span>\nv6.6.0\n\n<span class=\"token comment\"># 설정</span>\n<span class=\"token comment\">#aws-vault add &lt;PROFILE_NAME></span>\naws-vault <span class=\"token function\">add</span> t101\nEnter Access Key Id: <span class=\"token punctuation\">(</span>YOUR_ACCESS_KEY_ID<span class=\"token punctuation\">)</span>\nEnter Secret Key: <span class=\"token punctuation\">(</span>YOUR_SECRET_ACCESS_KEY<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 확인</span>\naws-vault <span class=\"token function\">ls</span>\nProfile                  Credentials              Sessions\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span>                  <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span>              <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span>\ndefault                  -                        -\nt101                     t101                     -\n\n<span class=\"token comment\"># 사용</span>\n<span class=\"token comment\">#aws-vault exec &lt;PROFILE> -- &lt;COMMAND></span>\naws-vault <span class=\"token builtin class-name\">exec</span> t101 -- aws s3 <span class=\"token function\">ls</span>\naws-vault <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">--debug</span> t101 -- aws s3 <span class=\"token function\">ls</span>\n\naws-vault <span class=\"token builtin class-name\">exec</span> t101 -- terraform plan\naws-vault <span class=\"token builtin class-name\">exec</span> t101 -- terraform apply</code></pre></div>\n<p><code class=\"language-text\">aws-vault</code> 를 사용하신다면, <code class=\"language-text\">~/.aws/credentials</code> 파일은 지우는게 좋습니다.</p>\n<h5 id=\"기계의-민감정보-유출-방지-방법\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EA%B3%84%EC%9D%98-%EB%AF%BC%EA%B0%90%EC%A0%95%EB%B3%B4-%EC%9C%A0%EC%B6%9C-%EB%B0%A9%EC%A7%80-%EB%B0%A9%EB%B2%95\" aria-label=\"기계의 민감정보 유출 방지 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기계의 민감정보 유출 방지 방법</h5>\n<p>프로덕션 레벨에서의 CI/CD 워크플로우 내용은 9장에서 살펴봅니다. 현재는 간단히 어떻게 사용되는지 정도만을 소개합니다.</p>\n<ol>\n<li>\n<p>[Providers] CircleCI as a CI server, with stored secrets : CI/CD 플랫폼인 CircleCI 를 통해 테라폼 코드를 실행한다고 가정</p>\n<ul>\n<li>영구자격증명은 IAM 룰과 다름에 주의합니다! 해당 단점을 없애기 위해 2번 예시를 살펴봅시다.</li>\n</ul>\n</li>\n<li>\n<p>[Providers] EC2 Instance running Jenkins as a CI server, with IAM roles 실습 : EC2에 Jenkins 설치 후 CI서버로 테라폼 코드를 실행한다고 가정 시 IAM roles 활용 - <a href=\"https://github.com/brikis98/terraform-up-and-running-code/tree/master/code/terraform/06-managing-secrets-with-terraform/ec2-iam-role\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">링크</a> (<code class=\"language-text\">chapter06/example01</code> 디렉토리를 참고바랍니다)</p>\n</li>\n<li>\n<p>[Providers] GitHub Actions as a CI server, with OIDC : Github Actions 은 직접 자격 증명과 OIDC Open ID Connect 지원 (가장 발전되고 이해하면 훨씬 좋은 개념!)</p>\n</li>\n</ol>\n<p>OAuth 2.0를 기반으로 한 발전형 통신이 OIDC(OpenID Connect)입니다. 이걸 사용해서 인증을 수행하는 예시를 살펴봅시다. (cf. OAuth 2.0에 대해 모르신다면 생활코딩의 <a href=\"https://www.youtube.com/playlist?list=PLuHgQVnccGMA4guyznDlykFJh28_R08Q-\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">OAuth 2.0 역할</a> 플레이리스트를 통해 공부하시는 것을 추천드립니다)</p>\n<h3 id=\"resource-data-source-기재-시-암호값을-관리하는-방안\" style=\"position:relative;\"><a href=\"#resource-data-source-%EA%B8%B0%EC%9E%AC-%EC%8B%9C-%EC%95%94%ED%98%B8%EA%B0%92%EC%9D%84-%EA%B4%80%EB%A6%AC%ED%95%98%EB%8A%94-%EB%B0%A9%EC%95%88\" aria-label=\"resource data source 기재 시 암호값을 관리하는 방안 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resource, Data source 기재 시 암호값을 관리하는 방안</h3>\n<p>마찬가지로, 리소스나 데이터소스 배포시에도 민감정보를 노출하면 절대 안됩니다! 이를 보완하기 위한 방법은 3가지가 있겠습니다.</p>\n<p>이 내용에 대한 에시코드는 <code class=\"language-text\">chapter06/exercises/02_resources_and_data_sources</code> 에 있습니다. 링크는 <a href=\"\">여기</a>를 클릭해주세요.</p>\n<h5 id=\"환경변수를-통한-민감정보-유출-방지\" style=\"position:relative;\"><a href=\"#%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98%EB%A5%BC-%ED%86%B5%ED%95%9C-%EB%AF%BC%EA%B0%90%EC%A0%95%EB%B3%B4-%EC%9C%A0%EC%B6%9C-%EB%B0%A9%EC%A7%80\" aria-label=\"환경변수를 통한 민감정보 유출 방지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>환경변수를 통한 민감정보 유출 방지</h5>\n<ul>\n<li>장점\n<ul>\n<li>모든 언어에서 환경변수에 관련 값을 넣어 쓸 수 있습니다</li>\n<li>비용이 들지 않습니다.</li>\n</ul>\n</li>\n<li>단점\n<ul>\n<li>팀원 모두가 환경변수를 수동으로 공유해야 합니다.</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"암호화된-파일을-통한-민감정보-유출-방지\" style=\"position:relative;\"><a href=\"#%EC%95%94%ED%98%B8%ED%99%94%EB%90%9C-%ED%8C%8C%EC%9D%BC%EC%9D%84-%ED%86%B5%ED%95%9C-%EB%AF%BC%EA%B0%90%EC%A0%95%EB%B3%B4-%EC%9C%A0%EC%B6%9C-%EB%B0%A9%EC%A7%80\" aria-label=\"암호화된 파일을 통한 민감정보 유출 방지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>암호화된 파일을 통한 민감정보 유출 방지</h5>\n<p>암호를 파일에 저장 후 버전 관리 → <strong>암호화 키</strong>를 클라우드 공급자 KMS를 통해 안전하게 저장 혹은 PGP 키 사용</p>\n<blockquote>\n<p>AWS KMS란?</p>\n<ul>\n<li>암호화는 키를 사용해 평문을 암호문으로 변환하는 프로세스다</li>\n<li>동일한 키를 사용해 암호문을 평문으로 변환할 수 있는데, 이를 복호화라고 한다</li>\n<li>AWS 키 관리 서비스 <strong>KMS</strong>는 공유 하드웨어 보안 모듈HSM 을 사용하면서 <strong>암호화키</strong>를 <strong>생성</strong>하고 <strong>관리</strong>할 수 있게 도와준다</li>\n<li>CloudHSM은 AWS 내에서 암호화키를 관리할 수 있지만 보안 강화를 위해 전용 HSM을 사용할 수 있는 서비스다</li>\n<li>용어 변경 참고 : 기존 Customer Master Key (<strong>CMK</strong>) → AWS <strong>KMS key</strong> 혹은 <strong>KMS key</strong> 로 변경 - <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/dochistory.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">링크</a></li>\n</ul>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">ALIAS_SUFFIX</span><span class=\"token operator\">=</span>s3ich4n\naws kms create-alias --alias-name alias/<span class=\"token variable\">$ALIAS_SUFFIX</span> --target-key-id <span class=\"token variable\">$KEY_ID</span>\n\n<span class=\"token comment\"># KMS(구 CMK)로 평문을 암호화해보기</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Hello 123123\"</span> <span class=\"token operator\">></span> secret.txt\naws kms encrypt --key-id alias/<span class=\"token variable\">$ALIAS_SUFFIX</span> --cli-binary-format raw-in-base64-out <span class=\"token parameter variable\">--plaintext</span> file://secret.txt <span class=\"token parameter variable\">--output</span> text <span class=\"token parameter variable\">--query</span> CiphertextBlob <span class=\"token operator\">|</span> base64 <span class=\"token parameter variable\">--decode</span> <span class=\"token operator\">></span> secret.txt.encrypted\n\n\naws kms decrypt --ciphertext-blob fileb://secret.txt.encrypted <span class=\"token parameter variable\">--output</span> text <span class=\"token parameter variable\">--query</span> Plaintext <span class=\"token operator\">|</span> base64 <span class=\"token parameter variable\">--decode</span>\nHello <span class=\"token number\">123123</span></code></pre></div>\n<h5 id=\"중앙-집중식-비밀-저장소-서비스-사용을-통한-민감정보-유출-방지\" style=\"position:relative;\"><a href=\"#%EC%A4%91%EC%95%99-%EC%A7%91%EC%A4%91%EC%8B%9D-%EB%B9%84%EB%B0%80-%EC%A0%80%EC%9E%A5%EC%86%8C-%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%82%AC%EC%9A%A9%EC%9D%84-%ED%86%B5%ED%95%9C-%EB%AF%BC%EA%B0%90%EC%A0%95%EB%B3%B4-%EC%9C%A0%EC%B6%9C-%EB%B0%A9%EC%A7%80\" aria-label=\"중앙 집중식 비밀 저장소 서비스 사용을 통한 민감정보 유출 방지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>중앙 집중식 비밀 저장소 서비스 사용을 통한 민감정보 유출 방지</h5>\n<p>중앙 집중식 비밀 저장소 서비스 사용 - AWS Secrets Manager, Google Secret Manager 등이 있지요.</p>\n<h3 id=\"state-file-plan-file-을-관리하는-방안\" style=\"position:relative;\"><a href=\"#state-file-plan-file-%EC%9D%84-%EA%B4%80%EB%A6%AC%ED%95%98%EB%8A%94-%EB%B0%A9%EC%95%88\" aria-label=\"state file plan file 을 관리하는 방안 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>State file, Plan file 을 관리하는 방안</h3>\n<p>plan 파일안에는 모든 정보가 평문으로 저장되어있습니다. 따라서 두가지 방안을 반드시 사용할 것을 권장합니다.</p>\n<ol>\n<li>백엔드 저장소에 저장하는 시점에 암호화</li>\n<li>백엔드 액세스에 대한 접근 통제</li>\n</ol>\n<h1 id=\"lessons-learned\" style=\"position:relative;\"><a href=\"#lessons-learned\" aria-label=\"lessons learned permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lessons Learned</h1>\n<p>제 6장에서는 아래의 내용을 반드시 기억하셨으면 좋겠습니다.</p>\n<ol>\n<li>암호 관리의 중요성은 더 이상 말할 필요가 없겠습니다.</li>\n<li>암호 관리 도구들은 어떤 목적을 가지고 있으며, 어떤 내용들이 있는지 살펴보았습니다.</li>\n<li>암호관리는 목적에 맞게 처리하는 것이 중요합니다.</li>\n</ol>\n<p>이것으로 제 6장을 마칩니다. 긴 글 읽어주셔서 감사합니다.</p>","fields":{"slug":"/devlog/terraform/2022-11-27---cloudneta-terraform-101-pt06//devlog/terraform/2022-11-27-cloudneta-terraform-101-pt06","tagSlugs":["/tag/terraform/","/tag/iac/","/tag/devops/"]},"frontmatter":{"date":"2022-11-27T22:19:00.000Z","description":"Terraform을 사용하며 인프라 프로비저닝 및 배포 시, 민감정보에 대해 관리하는 방안에 대해 작성하였습니다.","tags":["terraform","iac","devops"],"title":"[CloudNet@] 테라폼 스터디 6주차 - Managing Secrets with Terraform","socialImage":{"publicURL":{"publicURL":"/static/c4e4c53e79b94a7e80d5fd02b1b660d8/terraform06.jpg"}}}}},"pageContext":{"slug":"/devlog/terraform/2022-11-27---cloudneta-terraform-101-pt06//devlog/terraform/2022-11-27-cloudneta-terraform-101-pt06"}},"staticQueryHashes":["251939775","357378587","401334301"]}