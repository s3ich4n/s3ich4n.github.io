{"version":3,"file":"component---src-templates-post-template-post-template-tsx-119cd0258cb38628d01f.js","mappings":"uQAmBA,EANgC,SAAH,OAAMA,EAAS,EAATA,UAAWC,EAAK,EAALA,MAAOC,EAAE,EAAFA,GAAE,OACrDC,EAAAA,cAACC,EAAAA,KAAI,CAACJ,UAAWK,ICbC,+BDaiBL,GAAYE,GAAIA,GAChDD,EACI,E,oBECT,EAXe,WACb,OAA6BK,EAAAA,EAAAA,MAArBC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SAEhB,OACEL,EAAAA,cAAAA,MAAAA,CAAKH,UCTW,gCDUdG,EAAAA,cAAAA,IAAAA,CAAGH,UAAWQ,GAAWA,GACzBL,EAAAA,cAAAA,IAAAA,CAAGH,UCVQ,6BDUgBO,EAAOE,KAGxC,EEJMC,EAAO,4BAGPC,EAAuB,WAC3B,IAAMC,GAAeC,EAAAA,EAAAA,aAsBrB,OApBAC,EAAAA,EAAAA,kBAAgB,WACd,IAAMC,EAAaC,SAASC,cAAc,UAEpCC,EAAa,CACjBC,IAXM,gCAYNT,KAAAA,EACAU,MAXQ,YAYR,aAAc,WACdC,MAAO,gBACPC,YAAa,YACbC,MAAO,QAGTC,OAAOC,QAAQP,GAAYQ,SAAQ,YAAmB,IAAjBC,EAAG,KAAEC,EAAK,KAC7Cb,EAAWc,aAAaF,EAAKC,EAC/B,IAEAhB,EAAakB,QAASC,YAAYhB,EACpC,GAAG,CAACL,IAEGP,EAAAA,cAAAA,MAAAA,CAAK6B,IAAKpB,GACnB,EAEAD,EAAWsB,YAAc,aAEzB,QC1BA,EAPiC,SAAH,OAAMC,EAAI,EAAJA,KAAMjC,EAAK,EAALA,MAAK,OAC7CE,EAAAA,cAAAA,MAAAA,CAAKH,UCRc,kCDSjBG,EAAAA,cAAAA,KAAAA,CAAIH,UCRW,gCDQeC,GAC9BE,EAAAA,cAAAA,MAAAA,CAAKH,UCXS,8BDWemC,wBAAyB,CAAEC,OAAQF,KAC5D,EEQR,EAb8B,SAAH,OAAMG,EAAI,EAAJA,KAAI,OACnClC,EAAAA,cAAAA,MAAAA,CAAKH,UCPW,4BDQdG,EAAAA,cAAAA,IAAAA,CAAGH,UCTW,4BDSa,YACf,IACT,IAAIsC,KAAKD,GAAME,mBAAmB,QAAS,CAC1CC,KAAM,UACNC,MAAO,QACPC,IAAK,aAGL,EEOR,EAda,SAAH,OAAMC,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAAQ,OAC5BzC,EAAAA,cAAAA,MAAAA,CAAKH,UCTW,4BDUdG,EAAAA,cAAAA,KAAAA,CAAIH,UCXU,4BDYX4C,EACGA,EAASC,KAAI,SAACC,EAAMC,GAAC,OACnB5C,EAAAA,cAAAA,KAAAA,CAAIH,UCfE,2BDesB2B,IAAKmB,GAC/B3C,EAAAA,cAAC6C,EAAM,CAAC/C,MAAO0C,EAAKI,GAAIpB,IAAKmB,EAAM5C,GAAI4C,IACpC,IAEP,MAEF,EEyBR,EA7B8B,SAAH,GAAyB,IAAnBG,EAAI,EAAJA,KACvBC,EAASD,EAATC,KACAN,EAAaK,EAAKE,OAAlBP,SACR,EAA8BK,EAAKG,YAA3BT,EAAI,EAAJA,KAAM1C,EAAK,EAALA,MAAOoC,EAAI,EAAJA,KAErB,OACElC,EAAAA,cAAAA,MAAAA,CAAKH,UClBS,4BDmBZG,EAAAA,cAAAA,MAAAA,CAAKH,UCvBU,+BDwBbG,EAAAA,cAAC6C,EAAM,CAAChD,UCzBY,qCDyBsBC,MAAM,eAAeC,GAAG,MAClEC,EAAAA,cAACkD,EAAAA,EAAa,OAGhBlD,EAAAA,cAAAA,MAAAA,CAAKH,UC1BU,+BD2BbG,EAAAA,cAACmD,EAAO,CAACpB,KAAMgB,EAAMjD,MAAOA,KAG9BE,EAAAA,cAAAA,MAAAA,CAAKH,UC7BS,8BD8BZG,EAAAA,cAACoD,EAAI,CAAClB,KAAMA,IACXM,GAAQC,GAAYzC,EAAAA,cAACqD,EAAI,CAACb,KAAMA,EAAMC,SAAUA,IACjDzC,EAAAA,cAACsD,EAAM,OAGTtD,EAAAA,cAAAA,MAAAA,CAAKH,UCrCW,gCDsCdG,EAAAA,cAACuD,EAAQ,OAIjB,EECaC,EAAwB,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KACtC,GAAiCtD,EAAAA,EAAAA,MAAzBL,EAAK,EAALA,MAAOO,EAAQ,EAARA,SAAUqD,EAAG,EAAHA,IAEzB,EAMID,EAAKE,eALPV,YACSW,EAAS,EAAhB9D,MAAK,IACL+D,YAAaC,OAAe,MAAG,GAAE,EACjCC,EAAW,EAAXA,YAIEF,EAAcC,GAAmBzD,EACjC2D,GAAQD,aAAW,EAAXA,EAAaE,YAAaP,EAAIQ,OAAOH,aAAW,EAAXA,EAAaE,WAEhE,OACEjE,EAAAA,cAACoD,EAAAA,EAAI,CACHtD,MAAU8D,EAAS,MAAM9D,EACzB+D,YAAaA,EACbG,MAAOA,GAGb,EAEA,EArDsC,SAAH,OAAcL,EAAc,EAAtBF,KAAQE,eAAc,OAC7D3D,EAAAA,cAACmE,EAAAA,EAAM,KACLnE,EAAAA,cAACoE,EAAI,CAACtB,KAAMa,IACL,C","sources":["webpack://gatsby-starter-lumen/./src/components/Button/Button.tsx","webpack://gatsby-starter-lumen/./src/components/Button/Button.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Author/Author.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Author/Author.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Comments/Comments.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Content/Content.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Content/Content.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Meta/Meta.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Meta/Meta.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Tags/Tags.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Tags/Tags.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Post.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Post.module.scss","webpack://gatsby-starter-lumen/./src/templates/PostTemplate/PostTemplate.tsx"],"sourcesContent":["import React from \"react\";\n\nimport cn from \"classnames\";\nimport { Link } from \"gatsby\";\n\nimport * as styles from \"./Button.module.scss\";\n\ninterface Props {\n  className?: string;\n  title: string;\n  to: string;\n}\n\nconst Button: React.FC<Props> = ({ className, title, to }: Props) => (\n  <Link className={cn(styles.button, className)} to={to}>\n    {title}\n  </Link>\n);\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport var button = \"Button-module--button--b1113\";","import React from \"react\";\n\nimport { useSiteMetadata } from \"@/hooks\";\n\nimport * as styles from \"./Author.module.scss\";\n\nconst Author = () => {\n  const { author, subtitle } = useSiteMetadata();\n\n  return (\n    <div className={styles.author}>\n      <p className={subtitle}>{subtitle}</p>\n      <p className={styles.bio}>{author.bio}</p>\n    </div>\n  );\n};\n\nexport default Author;\n","// extracted by mini-css-extract-plugin\nexport var author = \"Author-module--author--1c58d\";\nexport var bio = \"Author-module--bio--08950\";\nexport var twitter = \"Author-module--twitter--90647\";","/**\n * 게시글의 Utterances 위젯을 담당하는 컴포넌트\n *\n * @created     2022-09-25 04:23:10\n * @modified    2022-09-25 04:23:10\n * @author      s3ich4n\n */\n\nimport React, { createRef, useLayoutEffect } from \"react\";\n\nconst src = \"https://utteranc.es/client.js\";\nconst repo = \"s3ich4n/s3ich4n.github.io\";\nconst theme = \"dark-blue\";\n\nconst Utterances: React.FC = () => {\n  const containerRef = createRef<HTMLDivElement>();\n\n  useLayoutEffect(() => {\n    const utterances = document.createElement(\"script\");\n\n    const attributes = {\n      src,\n      repo,\n      theme,\n      \"issue-term\": \"pathname\",\n      label: \"post-comments\",\n      crossOrigin: \"anonymous\",\n      async: \"true\",\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    containerRef.current!.appendChild(utterances);\n  }, [repo]);\n\n  return <div ref={containerRef} />;\n};\n\nUtterances.displayName = \"Utterances\";\n\nexport default Utterances;\n","import React from \"react\";\n\nimport * as styles from \"./Content.module.scss\";\n\ninterface Props {\n  title: string;\n  body: string;\n}\n\nconst Content: React.FC<Props> = ({ body, title }: Props) => (\n  <div className={styles.content}>\n    <h1 className={styles.title}>{title}</h1>\n    <div className={styles.body} dangerouslySetInnerHTML={{ __html: body }} />\n  </div>\n);\n\nexport default Content;\n","// extracted by mini-css-extract-plugin\nexport var body = \"Content-module--body--726c2\";\nexport var content = \"Content-module--content--80d58\";\nexport var title = \"Content-module--title--09504\";","import React from \"react\";\n\nimport * as styles from \"./Meta.module.scss\";\n\ninterface Props {\n  date: string;\n}\n\nconst Meta: React.FC<Props> = ({ date }: Props) => (\n  <div className={styles.meta}>\n    <p className={styles.date}>\n      Published{\" \"}\n      {new Date(date).toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      })}\n    </p>\n  </div>\n);\n\nexport default Meta;\n","// extracted by mini-css-extract-plugin\nexport var date = \"Meta-module--date--4d30d\";\nexport var meta = \"Meta-module--meta--dae0a\";","import React from \"react\";\n\nimport { Button } from \"@/components/Button\";\n\nimport * as styles from \"./Tags.module.scss\";\n\ntype Props = {\n  tags: string[];\n  tagSlugs: string[];\n};\n\nconst Tags = ({ tags, tagSlugs }: Props) => (\n  <div className={styles.tags}>\n    <ul className={styles.list}>\n      {tagSlugs\n        ? tagSlugs.map((slug, i) => (\n            <li className={styles.item} key={slug}>\n              <Button title={tags[i]} key={slug} to={slug} />\n            </li>\n          ))\n        : null}\n    </ul>\n  </div>\n);\n\nexport default Tags;\n","// extracted by mini-css-extract-plugin\nexport var item = \"Tags-module--item--52015\";\nexport var list = \"Tags-module--list--82ae6\";\nexport var tags = \"Tags-module--tags--18589\";","import React from \"react\";\n\nimport { Button } from \"@/components/Button\";\nimport { ThemeSwitcher } from \"@/components/ThemeSwitcher\";\nimport type { Node } from \"@/types\";\n\nimport { Author } from \"./Author\";\nimport { Comments } from \"./Comments\";\nimport { Content } from \"./Content\";\nimport { Meta } from \"./Meta\";\nimport { Tags } from \"./Tags\";\n\nimport * as styles from \"./Post.module.scss\";\n\ninterface Props {\n  post: Node;\n}\n\nconst Post: React.FC<Props> = ({ post }: Props) => {\n  const { html } = post;\n  const { tagSlugs } = post.fields;\n  const { tags, title, date } = post.frontmatter;\n\n  return (\n    <div className={styles.post}>\n      <div className={styles.buttons}>\n        <Button className={styles.buttonArticles} title=\"All Articles\" to=\"/\" />\n        <ThemeSwitcher />\n      </div>\n\n      <div className={styles.content}>\n        <Content body={html} title={title} />\n      </div>\n\n      <div className={styles.footer}>\n        <Meta date={date} />\n        {tags && tagSlugs && <Tags tags={tags} tagSlugs={tagSlugs} />}\n        <Author />\n      </div>\n\n      <div className={styles.comments}>\n        <Comments />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","// extracted by mini-css-extract-plugin\nexport var buttonArticles = \"Post-module--buttonArticles--d793a\";\nexport var buttons = \"Post-module--buttons--2972d\";\nexport var comments = \"Post-module--comments--d3b99\";\nexport var content = \"Post-module--content--3c6e5\";\nexport var footer = \"Post-module--footer--f8705\";\nexport var post = \"Post-module--post--3a994\";","import React from \"react\";\n\nimport { graphql } from \"gatsby\";\n\nimport { Layout } from \"@/components/Layout\";\nimport { Meta } from \"@/components/Meta\";\nimport { Post } from \"@/components/Post\";\nimport { useSiteMetadata } from \"@/hooks\";\nimport { Node } from \"@/types\";\n\ninterface Props {\n  data: {\n    markdownRemark: Node;\n  };\n}\n\nconst PostTemplate: React.FC<Props> = ({ data: { markdownRemark } }: Props) => (\n  <Layout>\n    <Post post={markdownRemark} />\n  </Layout>\n);\n\nexport const query = graphql`\n  query PostTemplate($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        tagSlugs\n      }\n      frontmatter {\n        date\n        description\n        tags\n        title\n        socialImage {\n          publicURL {\n            publicURL\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head: React.FC<Props> = ({ data }) => {\n  const { title, subtitle, url } = useSiteMetadata();\n\n  const {\n    frontmatter: {\n      title: postTitle,\n      description: postDescription = \"\",\n      socialImage,\n    },\n  } = data.markdownRemark;\n\n  const description = postDescription || subtitle;\n  const image = socialImage?.publicURL && url.concat(socialImage?.publicURL);\n\n  return (\n    <Meta\n      title={`${postTitle} - ${title}`}\n      description={description}\n      image={image}\n    />\n  );\n};\n\nexport default PostTemplate;\n"],"names":["className","title","to","React","Link","cn","useSiteMetadata","author","subtitle","bio","repo","Utterances","containerRef","createRef","useLayoutEffect","utterances","document","createElement","attributes","src","theme","label","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","current","appendChild","ref","displayName","body","dangerouslySetInnerHTML","__html","date","Date","toLocaleDateString","year","month","day","tags","tagSlugs","map","slug","i","Button","post","html","fields","frontmatter","ThemeSwitcher","Content","Meta","Tags","Author","Comments","Head","data","url","markdownRemark","postTitle","description","postDescription","socialImage","image","publicURL","concat","Layout","Post"],"sourceRoot":""}